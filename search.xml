<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CMM第四次汇报</title>
    <url>/2022/05/29/CMM%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%B1%87%E6%8A%A5/</url>
    <content><![CDATA[<h2 id="CMM第四次汇报">CMM第四次汇报</h2>
<p>2020010661衡先焘</p>
<h3 id="跟踪项目进度">跟踪项目进度</h3>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>设置比较基准</strong></p>
</li>
</ul>
<p>​		视图 – 任务试图： “甘特图”  —&gt;  “跟踪甘特图”</p>
<p>​		视图 – 数据：“表格”  —&gt; “差异” / “工时” / “成本”</p>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>设置状态日期</strong></p>
</li>
</ul>
<p>​		状态日期：报告日期（非当前日期），截止到哪一天的日期</p>
<p>​		项目–属性：”项目<mark>信息</mark>“</p>
<p>​		输入  ”状态日期“</p>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>需要更新的信息</strong></p>
</li>
</ul>
<p>​	⭕任务进度（工期、时间）</p>
<p>​		✔ 实际开始/完成日期</p>
<p>​		✔ 实际和剩余工期</p>
<p>​		✔ 实际完成百分比 = 实际工期 / 工期（实际 + 剩余）</p>
<p>​	⭕任务工时（人工时）</p>
<p>​		✔ 实际和剩余工时</p>
<p>​		✔ 工时完成百分比 = 实际工时 / 工时</p>
<p>​	⭕任务成本</p>
<p>​		✔ 实际成本</p>
<p>​		✔ 剩余成本</p>
<p>​	⭕实际完成百分比</p>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>更新任务进度</strong></p>
</li>
</ul>
<p>​	⭕ 视图：跟踪甘特图</p>
<p>​	⭕ 任务 – 日程： ”跟踪时标记“  — &gt;  ”更新任务“</p>
<p>​	⭕ 输入（工期）完成百分比</p>
<p>​	⭕ 输入实际开始和/或完成日期</p>
<p>​	⭕ 输入实际和剩余工期</p>
<h3 id="使用跟踪表">使用跟踪表</h3>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>使用跟踪表</strong></p>
</li>
</ul>
<p>​		视图：甘特图/跟踪甘特图</p>
<p>​		视图-数据：”表格“  – &gt; “跟踪”</p>
<p>​		输入 ”实际<mark>信息</mark>“</p>
<p>​		跟踪时标记 （Mark on Track）</p>
<ul class="lvl-0">
<li class="lvl-5">
<p><strong>跟踪资源工时</strong></p>
</li>
</ul>
<p>视图：资源使用状况</p>
<p>视图-数据：“表格”  —&gt;  “工时”</p>
<p>输入实际工时</p>
<p>✔按天输入实际工时</p>
<p>估计并输入剩余工时</p>
<p>输入工时完成百分比</p>
<p>​	✔任务何时开始 / 完成 ?</p>
<p>​	✔ 任务是否延迟 ?</p>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>更新任务 / 资源成本</strong></p>
</li>
</ul>
<p>​		针对成本类型资源</p>
<p>​		视图：任务分配 / 资源使用状况</p>
<p>​		视图 - 数据： “表格” —&gt; “成本”</p>
<p>​		输入实际成本</p>
<p>​			✔ 按时间刻度输入实际成本</p>
<p>​		估计并输入剩余成本</p>
<p>赶工，快速跟进</p>
<img src="/2022/05/29/CMM%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%B1%87%E6%8A%A5/image-20220529201346239.png" alt="image-20220529201346239">
<img src="/2022/05/29/CMM%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%B1%87%E6%8A%A5/image-20220529201428566.png" alt="image-20220529201428566">
<img src="/2022/05/29/CMM%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%B1%87%E6%8A%A5/image-20220529201514261.png" alt="image-20220529201514261">
<img src="/2022/05/29/CMM%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%B1%87%E6%8A%A5/image-20220529201645118.png" alt="image-20220529201645118">
<p>如果产生差异，那么就要采用赶工，加班等措施加快进度。</p>
<h3 id="调整偏差">调整偏差</h3>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>发现差异</strong></p>
</li>
</ul>
<p>​		差异表</p>
<p>​			✔ 开始/ 完成时间差异</p>
<p>​		成本表</p>
<p>​			✔ （成本）差异</p>
<p>​		工时表</p>
<p>​			✔ （工时差异）</p>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>使用进度线</strong></p>
</li>
</ul>
<p>​	视图：甘特图 / 跟踪甘特图</p>
<p>​		✔ 格式 - 格式 ： “网格线” —&gt; “进度线”</p>
<p><img src="/2022/05/29/CMM%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%B1%87%E6%8A%A5/image-20220529203535694.png" alt="image-20220529203535694"></p>
<img src="/2022/05/29/CMM%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%B1%87%E6%8A%A5/image-20220529203956284.png" alt="image-20220529203956284">
<h3 id="报告进度">报告进度</h3>
<p>生成报表</p>
<img src="/2022/05/29/CMM%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%B1%87%E6%8A%A5/image-20220529205321239.png" alt="image-20220529205321239">
<h2 id="对比Teambition">对比Teambition</h2>
<p>通过对比，发现，teambition在任务进度跟踪这一块做的不尽人意。它的任务完成状态只有true or false，也就是说不能更清晰的看到项目的进展程度，往往软件开发的进度都是一个比较长的阶段，用true or false来判断不是特别的好，除非把任务细分到极致。</p>
<img src="/2022/05/29/CMM%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%B1%87%E6%8A%A5/image-20220529211307449.png" alt="image-20220529211307449">
<p>差异比较就就更没有了，调整偏差也很难去改。生成报表没有过多的选择，能生成的只是如下的任务汇总。</p>
<img src="/2022/05/29/CMM%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%B1%87%E6%8A%A5/image-20220529211036195.png" alt="image-20220529211036195">
<p>所以在我看来，teambition的项目管理更适合任务划分到每一天，每一个人的哪种，生成的报表也是每个人一天完成的状况。</p>
<p>总的来说，ms project这一块还是太过于优秀。！！</p>
]]></content>
      <categories>
        <category>课程论文</category>
      </categories>
      <tags>
        <tag>项目管理</tag>
        <tag>小组汇报</tag>
      </tags>
  </entry>
  <entry>
    <title>keras各个组件</title>
    <url>/2022/07/23/keras%E5%90%84%E4%B8%AA%E7%BB%84%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="keras">keras</h2>
<p>[toc]</p>
<h4 id="Dense层">Dense层</h4>
<ul class="lvl-0">
<li class="lvl-2">
<p>units: 正整数，输出空间维度。</p>
</li>
<li class="lvl-2">
<p>activation: 激活函数 (详见 activations)。 若不指定，则不使用激活函数 (即，「线性」激活: a(x) = x)。</p>
</li>
<li class="lvl-2">
<p>use_bias: 布尔值，该层是否使用偏置向量。</p>
</li>
<li class="lvl-2">
<p>kernel_initializer: kernel 权值矩阵的初始化器 (详见 initializers)。</p>
</li>
<li class="lvl-2">
<p>bias_initializer: 偏置向量的初始化器 (see initializers).</p>
</li>
<li class="lvl-2">
<p>kernel_regularizer: 运用到 kernel 权值矩阵的正则化函数 (详见 regularizer)。</p>
</li>
<li class="lvl-2">
<p>bias_regularizer: 运用到偏置向的的正则化函数 (详见 regularizer)。</p>
</li>
<li class="lvl-2">
<p>activity_regularizer: 运用到层的输出的正则化函数 (它的 “activation”)。 (详见 regularizer)。</p>
</li>
<li class="lvl-2">
<p>kernel_constraint: 运用到 kernel 权值矩阵的约束函数 (详见 constraints)。</p>
</li>
<li class="lvl-2">
<p>bias_constraint: 运用到偏置向量的约束函数 (详见 constraints)。</p>
</li>
</ul>
<h4 id="optimizer优化器">optimizer优化器</h4>
<p>参考B呼 <a class="link" href="https://zhuanlan.zhihu.com/p/72039430">优化方法——AdaGrad、RMSProp、Adam - 知乎 (zhihu.com)<i class="fas fa-external-link-alt"></i></a></p>
<ul class="lvl-0">
<li class="lvl-2">
<h6 id="Adagrad">Adagrad</h6>
<img src="https://pic4.zhimg.com/v2-8c0047c1dc1c8f43ee6c114eb2d5c013_r.jpg" alt="preview">
<p>**AdaGrad的效果是：**在参数空间中更为平缓的倾斜方向会取得更大的进步（因为平缓，所以历史梯度平方和较小，对应学习下降的幅度较小）。</p>
<p>**优点：**解决了SGD中学习率不能自适应调整的问题。</p>
<p><strong>缺点：</strong>（1）对于训练深度神经网络模型而言，从训练开始时<strong>累积平方梯度值会越来越大</strong>，会<strong>导致学习率过早和过量的减少</strong>，从而导致<strong>迭代后期收敛及其缓慢</strong>。AdaGrad在某些深度学习模型上效果不错，但不是全部。（2）需要手动设置全局学习率</p>
</li>
<li class="lvl-2">
<h6 id="RMSprop">RMSprop</h6>
<img src="https://pic4.zhimg.com/v2-8147eed78273f3a71b66c3b38ddabbe7_r.jpg" alt="img">
<p><strong>RMSProp主要思想：使用指数加权移动平均的方法计算累积梯度</strong>，以丢弃遥远的梯度历史信息（让距离当前越远的梯度的缩减学习率的权重越小）。</p>
<p>**优点：**完全自适应全局学习率，加速效果好。</p>
<p>**缺点：**后期容易在小范围内产生震荡。</p>
</li>
<li class="lvl-2">
<h6 id="SGD">SGD</h6>
</li>
<li class="lvl-2">
<h6 id="Adadelta">Adadelta</h6>
</li>
<li class="lvl-2">
<h6 id="Adam">Adam</h6>
<p><strong>Adam算法</strong>可能是除了SGD算法之外大家最熟悉的了，<strong>如果你不知道用什么优化方法时，无脑用它就对了。</strong></p>
<p><strong>Adam算法的本质：<strong>其实就是</strong>Momentum+RMSProp的结合</strong>，然后<strong>再修正其偏差</strong>。Adam对梯度的一阶和二阶都进行了估计与偏差修正，使用梯度的一阶矩估计和二阶矩估计来动态调整每个参数的学习率（参数更新的幅度）。</p>
<p><strong>优点：<strong>Adam对</strong>学习率</strong>没有那么敏感，**建议默认为0.001，实践中，也可以设置为 <img src="https://www.zhihu.com/equation?tex=5%5Ctimes10%5E%7B-4%7D" alt="[公式]"> 。**Adam通常被认为对超参数的选择相当鲁棒，同时相比于Adagrad，不用存储全局所有的梯度，<strong>适合处理大规模数据</strong>。</p>
<p>**缺点：**Adam每次迭代参数的学习步长都有一个确定的范围，不会因为很大的梯度导致很大的学习步长，参数的值比较稳定，但是它也并非真的是参数不敏感的，学习率在训练的后期可仍然可能不稳定导致无法收敛到足够好的值，泛化能力较差。</p>
</li>
<li class="lvl-2">
<h6 id="Adamax">Adamax</h6>
</li>
<li class="lvl-2">
<h6 id="Nadam">Nadam</h6>
</li>
<li class="lvl-2">
<h6 id="TFOptimizer">TFOptimizer</h6>
</li>
</ul>
]]></content>
      <categories>
        <category>deep learning</category>
      </categories>
      <tags>
        <tag>keras</tag>
      </tags>
  </entry>
  <entry>
    <title>Composition API实战</title>
    <url>/2022/06/13/Composition%20API%E5%AE%9E%E6%88%98/</url>
    <content><![CDATA[<p>这是看完B站vue3视频后的总结</p>
<p><a class="link" href="https://www.bilibili.com/video/BV1SZ4y157m8?vd_source=edb513392f7aebe4a605451e200149b4">https://www.bilibili.com/video/BV1SZ4y157m8?vd_source=edb513392f7aebe4a605451e200149b4<i class="fas fa-external-link-alt"></i></a></p>
<img src="/2022/06/13/Composition%20API%E5%AE%9E%E6%88%98/image-20220613221556510.png" alt="image-20220613221556510">
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot; @mousedown=&quot;mouseDown&quot;&gt;</span><br><span class="line">    &lt;h1&gt;ToDoList&lt;/h1&gt;</span><br><span class="line">    &lt;h3&gt;共有&lt;span class=&quot;text-primary&quot;&gt;&#123;&#123; lists.length &#125;&#125;&lt;/span&gt;</span><br><span class="line">      个任务，其中&lt;span class=&quot;text-success&quot;&gt;&#123;&#123; finished.length &#125;&#125;&lt;/span&gt;</span><br><span class="line">      项已完成&lt;/h3&gt;</span><br><span class="line">    &lt;h3&gt;未完成的列表&lt;/h3&gt;</span><br><span class="line">    &lt;ul class=&quot;list-group&quot;&gt;</span><br><span class="line">      &lt;template v-for=&quot;(item, index) in lists&quot;&gt;</span><br><span class="line">        &lt;li</span><br><span class="line">            v-if=&quot;!item.checked&quot;</span><br><span class="line">            :key=&quot;index&quot;</span><br><span class="line">            class=&quot;list-group-item d-flex justify-content-between&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;div class=&quot;form-group form-check mb-0&quot;&gt;</span><br><span class="line">            &lt;input</span><br><span class="line">                :id=&quot;&#x27;item-&#x27; + index&quot;</span><br><span class="line">                v-model=&quot;item.checked&quot;</span><br><span class="line">                class=&quot;form-check-input&quot;</span><br><span class="line">                type=&quot;checkbox&quot;</span><br><span class="line">                @click=&quot;() =&gt; (item.checked = ! item.checked)&quot;</span><br><span class="line">            &gt;</span><br><span class="line">            &lt;label</span><br><span class="line">                v-if=&quot;!item.isEdit&quot;</span><br><span class="line">                class=&quot;form-check-label&quot;</span><br><span class="line">                @dblclick=&quot;showEdit(item, index)&quot;</span><br><span class="line">            &gt;</span><br><span class="line">              &#123;&#123; item.name &#125;&#125;</span><br><span class="line">            &lt;/label&gt;</span><br><span class="line">            &lt;label v-else :for=&quot;&#x27;item-&#x27; + index&quot; class=&quot;form-check-label&quot;&gt;</span><br><span class="line">              &lt;input ref=&quot;myInput&quot; v-model=&quot;editValue&quot; type=&quot;text&quot;&gt;</span><br><span class="line">            &lt;/label&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">          &lt;button type=&quot;button&quot; class=&quot;close&quot; aria-label=&quot;Close&quot;</span><br><span class="line">                  @click=&quot;remove(index)&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;span aria-hidden=&quot;true&quot;&gt;&amp;times;&lt;/span&gt;</span><br><span class="line">          &lt;/button&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;h3&gt;已完成的列表&lt;/h3&gt;</span><br><span class="line">    &lt;ul class=&quot;list-group&quot;&gt;</span><br><span class="line">      &lt;li</span><br><span class="line">          v-for=&quot;(item, index) in finished&quot;</span><br><span class="line">          :key=&quot;&#x27;finished-&#x27;+index&quot;</span><br><span class="line">          class=&quot;list-group-item&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;div class=&quot;form-group form-check&quot;&gt;</span><br><span class="line">          &lt;input</span><br><span class="line">              :id=&quot;&#x27;finished-&#x27; + index&quot;</span><br><span class="line">              v-model=&quot;item.checked&quot;</span><br><span class="line">              class=&quot;form-check-input&quot;</span><br><span class="line">              disabled</span><br><span class="line">              type=&quot;checkbox&quot;</span><br><span class="line">          &gt;</span><br><span class="line">          &lt;label :for=&quot;&#x27;finished-&#x27; + index&quot; class=&quot;form-check-label&quot;&gt;</span><br><span class="line">            &#123;&#123; item.name &#125;&#125;</span><br><span class="line">          &lt;/label&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h3&gt;添加新的Task&lt;/h3&gt;</span><br><span class="line">    &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">      &lt;label for=&quot;add&quot;&gt;添加&lt;/label&gt;</span><br><span class="line">      &lt;input</span><br><span class="line">          id=&quot;add&quot;</span><br><span class="line">          v-model=&quot;value&quot;</span><br><span class="line">          class=&quot;form-control&quot;</span><br><span class="line">          placeholder=&quot;添加新的Task&quot;</span><br><span class="line">          type=&quot;text&quot;</span><br><span class="line">          @keydown.enter=&quot;add&quot;</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;button</span><br><span class="line">          class=&quot;btn btn-primary btn-lg btn-block&quot;</span><br><span class="line">          type=&quot;button&quot; @click=&quot;add()&quot;&gt;</span><br><span class="line">        Block level button</span><br><span class="line">      &lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123;ref, reactive, toRefs, computed, onUpdated&#125; from &quot;vue&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;HelloWorld&#x27;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    msg: String</span><br><span class="line">  &#125;,</span><br><span class="line">  setup() &#123;</span><br><span class="line">    const myInput = ref(null);</span><br><span class="line"></span><br><span class="line">    let editIndex = 0;</span><br><span class="line">    //1.加入checkbox -&gt; checked</span><br><span class="line">    //2.统计哪些 -&gt; checked -&gt; finish列表</span><br><span class="line">    //3.add添加item -&gt; item数据结构 -&gt; name,checked,isEdit</span><br><span class="line">    const add = () =&gt; &#123;</span><br><span class="line">      state.lists.push(&#123;</span><br><span class="line">        name: state.value,</span><br><span class="line">        checked: false,</span><br><span class="line">        isEdit: false</span><br><span class="line">      &#125;)</span><br><span class="line">      state.value = &#x27;&#x27;</span><br><span class="line">    &#125;;</span><br><span class="line">    //4.双击进行编辑</span><br><span class="line">    const showEdit = (item, index) =&gt; &#123;</span><br><span class="line">      editIndex = index;</span><br><span class="line">      item.isEdit = true;</span><br><span class="line">      state.editValue = item.name;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    const mouseDown = (e) =&gt; &#123;</span><br><span class="line">      console.log(e.target)</span><br><span class="line">      if (myInput.value &amp;&amp; !e.target.contains(myInput.value[0])) &#123;</span><br><span class="line">        state.lists[editIndex] = &#123;</span><br><span class="line">          name: state.editValue,</span><br><span class="line">          checked: false,</span><br><span class="line">          isEdit: false</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    //5.删除功能 -&gt; 删除特定index的元素 You,a few seconds</span><br><span class="line">    const remove = (index) =&gt; &#123;</span><br><span class="line">      state.lists.splice(index, 1)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    const state = reactive(&#123;</span><br><span class="line">      value: &quot;&quot;,</span><br><span class="line">      editValue: &quot;&quot;,</span><br><span class="line">      lists: [</span><br><span class="line">        &#123;</span><br><span class="line">          name: &#x27;1&#x27;,</span><br><span class="line">          checked: false,</span><br><span class="line">          isEdit: false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          name: &#x27;2&#x27;,</span><br><span class="line">          checked: false,</span><br><span class="line">          isEdit: false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          name: &#x27;3&#x27;,</span><br><span class="line">          checked: false,</span><br><span class="line">          isEdit: false</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">      finished: computed(() =&gt;</span><br><span class="line">          state.lists.filter((item) =&gt; item.checked === true)</span><br><span class="line">      ),</span><br><span class="line">      myInput,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    onUpdated(() =&gt; &#123;</span><br><span class="line">      console.log(myInput.value)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    return &#123;</span><br><span class="line">      ...toRefs(state),</span><br><span class="line">      add,</span><br><span class="line">      showEdit,</span><br><span class="line">      mouseDown,</span><br><span class="line">      remove</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Add &quot;scoped&quot; attribute to limit CSS to this component only --&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue3</tag>
      </tags>
  </entry>
  <entry>
    <title>大学生~活便签（1）</title>
    <url>/2022/04/14/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE/</url>
    <content><![CDATA[<h2 id="大学生-活便签">大学生~活便签</h2>
<p>小组成员：衡先焘，李薇，李晨佳</p>
<p><a class="link" href="https://hengxt.github.io/2022/04/14/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE/">点击此处跳转网页文档<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="1、概要说明">1、概要说明</h3>
<p>背景：作为一名大学生，在经过两年的大学校园生活后，我们经常感到时间总是在不经意间溜走。一次次的点开微信转账、手机银行账单来查看收支；通过学校的公众号来确认课程时间；总是忘记自己的待办事项……这些看似简单的事件却使我们的时间在不经意间浪费。基于以上背景，我们小组意在开发一个app，来帮助大学生通过它提高效率，节省时间，更好的享受大学生活。目标：此app将会包含待办记录、账本、课程表、日记、日历、树洞等功能。通过便签的方式实现方便简洁直观的效果，实现方便大学生活的目标。前景：以上功能虽有app已经实现，但此app面向大学生，功能的设计更符合学生的需求，且将多种功能集于一个app中，可以更高效的提供服务。</p>
<center class="half">
<img src="/2022/04/14/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE/image-20220416204743200.png" alt="image-20220416204743200" width="140">
<img src="/2022/04/14/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE/image-20220416204830583.png" alt="image-20220416204830583" width="140">
<img src="/2022/04/14/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE/image-20220416204851139.png" alt="image-20220416204851139" width="140">
<img src="/2022/04/14/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE/image-20220416204908872.png" alt="image-20220416204908872" width="140">
</center>
<p>​               (原型图来自墨刀Mociktt  <a class="link" href="https://modao.cc/app/LFrOoRg7ra2t9toI0i0jNs">https://modao.cc/app/LFrOoRg7ra2t9toI0i0jNs<i class="fas fa-external-link-alt"></i></a> 《每日记录APP——忆日记》 )</p>
<h3 id="2、表结构及其关系">2、表结构及其关系</h3>
<br>
<p>数据库我们采用mysql，以下是5张关系型表，每个表对应一个大的功能块，待办，账单，日记，树洞，课表，除此之外，我们还会获取用户手机的存储，从而做到本地存储。</p>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">表名</th>
        <th colspan="5" style="color: #23bb68">tb_todo</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">待办表</td>
      </tr>
      <tr>
        <th>主键</th>
        <td colspan="5">id</td>
      </tr>
      <tr>
        <th>索引</th>
        <td colspan="5">todo_id</td>
      </tr>
      <tr>
        <th>字段名</th>
        <th colspan="2">描述</th>
        <th>类型</th>
        <th>默认值</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>id</td>
        <td colspan="2">内码</td>
        <td>bigint(20)</td>
        <td>自增长</td>
        <td>true</td>
      </tr>
      <tr>
        <td>todo_id</td>
        <td colspan="2">待办的唯一标签</td>
        <td>varchar(50)</td>
        <td>uuid</td>
        <td>true</td>
      </tr>
      <tr>
        <td>todo_content</td>
        <td colspan="2">待办的主要内容</td>
        <td>varchar(200)</td>
        <td>null</td>
        <td>true</td>
      </tr>
      <tr>
        <td>todo_finish</td>
        <td colspan="2">待办的状态（未完成，已完成，丢弃）</td>
        <td>tinyint</td>
        <td>0(未完成)</td>
        <td>true</td>
      </tr>
      <tr>
        <td>todo_date</td>
        <td colspan="2">待办的时间</td>
        <td>datetime</td>
        <td>null</td>
        <td>flase</td>
      </tr>
      <tr>
        <td>......</td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">表名</th>
        <th colspan="5" style="color: #23bb68">tb_aBook</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">账本表</td>
      </tr>
      <tr>
        <th>主键</th>
        <td colspan="5">id</td>
      </tr>
      <tr>
        <th>索引</th>
        <td colspan="5">aBook_id</td>
      </tr>
      <tr>
        <th>字段名</th>
        <th colspan="2">描述</th>
        <th>类型</th>
        <th>默认值</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>id</td>
        <td colspan="2">内码</td>
        <td>bigint(20)</td>
        <td>自增长</td>
        <td>true</td>
      </tr>
      <tr>
        <td>aBook_id</td>
        <td colspan="2">账本的唯一标签</td>
        <td>varchar(50)</td>
        <td>uuid</td>
        <td>true</td>
      </tr>
      <tr>
        <td>aBook_money</td>
        <td colspan="2">账单的金额(元)</td>
        <td>int</td>
        <td>0</td>
        <td>true</td>
      </tr>
      <tr>
        <td>aBook_type</td>
        <td colspan="2">账本类型</td>
        <td>enum</td>
        <td>支出，收入...</td>
        <td>true</td>
      </tr>
      <tr>
        <td>aBook_mark</td>
        <td colspan="2">账本的备注</td>
        <td>varchar(20)</td>
        <td>null</td>
        <td>false</td>
      </tr>
      <tr>
        <td>aBook_date</td>
        <td colspan="2">账单产生的时间</td>
        <td>datetime</td>
        <td>当前的时间</td>
        <td>true</td>
      </tr>
      <tr>
        <td>......</td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">表名</th>
        <th colspan="5" style="color: #23bb68">tb_diary</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">日历表</td>
      </tr>
      <tr>
        <th>主键</th>
        <td colspan="5">id</td>
      </tr>
      <tr>
        <th>索引</th>
        <td colspan="5">diary_id</td>
      </tr>
      <tr>
        <th>字段名</th>
        <th colspan="2">描述</th>
        <th>类型</th>
        <th>默认值</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>id</td>
        <td colspan="2">内码</td>
        <td>bigint(20)</td>
        <td>自增长</td>
        <td>true</td>
      </tr>
      <tr>
        <td>diary_id</td>
        <td colspan="2">日记的唯一标签</td>
        <td>varchar(50)</td>
        <td>uuid</td>
        <td>true</td>
      </tr>
      <tr>
        <td>diary_content</td>
        <td colspan="2">日记的主要内容</td>
        <td>varchar(200)</td>
        <td>null</td>
        <td>true</td>
      </tr>
      <tr>
        <td>diary_date</td>
        <td colspan="2">创建日记的时间</td>
        <td>datetime</td>
        <td>当天的时间</td>
        <td>true</td>
      </tr>
      <tr>
        <td>diary_theme</td>
        <td colspan="2">日历的主题</td>
        <td>varchar</td>
        <td>例如：世界读书日</td>
        <td>true</td>
      </tr>
      <tr>
        <td>diary_weather</td>
        <td colspan="2">当天的天气</td>
        <td>enum</td>
        <td>晴朗，阴...</td>
        <td>true</td>
      </tr>
      <tr>
        <td>diary_mood</td>
        <td colspan="2">当天的心情</td>
        <td>enum</td>
        <td>开心，伤心...</td>
        <td>true</td>
      </tr>
      <tr>
        <td>......</td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">表名</th>
        <th colspan="5" style="color: #23bb68">tb_hole</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">树洞表</td>
      </tr>
      <tr>
        <th>主键</th>
        <td colspan="5">id</td>
      </tr>
      <tr>
        <th>索引</th>
        <td colspan="5">hole_id</td>
      </tr>
      <tr>
        <th>字段名</th>
        <th colspan="2">描述</th>
        <th>类型</th>
        <th>默认值</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>id</td>
        <td colspan="2">内码</td>
        <td>bigint(20)</td>
        <td>自增长</td>
        <td>true</td>
      </tr>
      <tr>
        <td>hole_id</td>
        <td colspan="2">树洞的唯一标签</td>
        <td>varchar(50)</td>
        <td>uuid</td>
        <td>true</td>
      </tr>
      <tr>
        <td>hole_content</td>
        <td colspan="2">树洞的主要内容</td>
        <td>varchar(200)</td>
        <td>null</td>
        <td>true</td>
      </tr>
      <tr>
        <td>hole_date</td>
        <td colspan="2">树洞发布的时间</td>
        <td>datetime</td>
        <td>当前的时间</td>
        <td>true</td>
      </tr>
      <tr>
        <td>......</td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">表名</th>
        <th colspan="5" style="color: #23bb68">tb_schedule</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">课程表</td>
      </tr>
      <tr>
        <th>主键</th>
        <td colspan="5">id</td>
      </tr>
      <tr>
        <th>索引</th>
        <td colspan="5">schedule_id</td>
      </tr>
      <tr>
        <th>字段名</th>
        <th colspan="2">描述</th>
        <th>类型</th>
        <th>默认值</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>id</td>
        <td colspan="2">内码</td>
        <td>bigint(20)</td>
        <td>自增长</td>
        <td>true</td>
      </tr>
      <tr>
        <td>schedule_id</td>
        <td colspan="2">课程的唯一标签</td>
        <td>varchar(50)</td>
        <td>uuid</td>
        <td>true</td>
      </tr>
      <tr>
        <td>schedule_type</td>
        <td colspan="2">课程是否是单双周</td>
        <td>tinyint</td>
        <td>1(单周)</td>
        <td>true</td>
      </tr>
      <tr>
        <td>schedule_content</td>
        <td colspan="2">课表的主要内容</td>
        <td>varchar(200)</td>
        <td>null</td>
        <td>true</td>
      </tr>
      <tr>
        <td>schedule_day</td>
        <td colspan="2">星期几,1-7</td>
        <td>tinyint</td>
        <td>1</td>
        <td>true</td>
      </tr>
      <tr>
        <td>schedule_section</td>
        <td colspan="2">每天第几节课,1-6</td>
        <td>tinyint</td>
        <td>1</td>
        <td>true</td>
      </tr>
      <tr>
        <td>......</td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
      </tr>
    </table>
<br>
<h3 id="3、业务流程图、时序图（按照人操作的维度）">3、业务流程图、时序图（按照人操作的维度）</h3>
<br>
<p>用户的操作也主要是集中在：待办，账单，日记，树洞，课表这五个板块</p>
<img src="/2022/04/14/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE/用户操作流程图.png" alt="用户操作流程图" style="zoom:50%;">
<h3 id="4、程序流程图、时序图（按照代码执行的维度）">4、程序流程图、时序图（按照代码执行的维度）</h3>
<br>
<p>待办，账单，日记，树洞，课表这五个功能点将会存在于三个界面，查看浏览界面，添加页面，管理（个人）页面。</p>
<img src="/2022/04/14/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE/首页-16501064756811.png" alt="首页-16501064756811">
<img src="/2022/04/14/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE/添加页面-16501064812702.png" alt="添加页面-16501064812702">
<img src="/2022/04/14/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE/我的页面.png" alt="我的页面">
<h3 id="5、接口约定（对外公开的方法、api-接口等）">5、接口约定（对外公开的方法、api 接口等）</h3>
<br>
<p>后端可以考虑采用java系列，springboot是易于实现且十分成熟的后端服务框架，服务器采用 本地tomcat + 阿里云的组合。</p>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/diary/getOne</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">获取日记的detail</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>todo_id</td>
        <td colspan="3">待办的唯一标签</td>
        <td>uuid</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功获取",
         	"data": {
         		"name": "第一个日记",
         		"date": "日记的时间"
         	}
         }</pre></span></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/todo/getByDay</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">获取某一天的待办</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>date</td>
        <td colspan="3">当天的日期，day</td>
        <td>datetime</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功获取",
         	"data": {
         		"name": "第一个日记",
         		"date": "日记的时间"
         	}
         }</pre></span></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/aBook/getByDay</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">按天查询账单</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>date</td>
        <td colspan="3">某一天的日期</td>
        <td>datetime</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功获取",
         	"data": {
         		"name": "第一个日记",
         		"date": "日记的时间"
         	}
         }</pre></span></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/hole/getList/1/10</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">获取树洞的信息，分页，一次十条，restful风格</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>无</td>
        <td colspan="3">不需要参数，参数在url上</td>
        <td>...</td>
        <td>...</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功获取",
         	"data": {[
         		"name": "第一个日记",
         		"date": "日记的时间"
         		],[
         		"name": "第一个日记",
         		"date": "日记的时间"
         		]...
         	}
         }</pre></span></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/schedule/getOne</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">获取当日的课表</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>date</td>
        <td colspan="3">当天的日期</td>
        <td>datetime</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功获取",
         	"data": {[
         		"name": "第一个日记",
         		"date": "日记的时间"
         		],[
         		"name": "第一个日记",
         		"date": "日记的时间"
         		]...
         	}
         }</pre></span></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/diary/create</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">新建日记</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>date</td>
        <td colspan="3">创建日记的时间</td>
        <td>datetime</td>
        <td>true</td>
      </tr>
      <tr>
        <td>theme</td>
        <td colspan="3">日记的主题</td>
        <td>varchar</td>
        <td>true</td>
      </tr>
      <tr>
        <td>weather</td>
        <td colspan="3">创建日记的天气</td>
        <td>enum</td>
        <td>true</td>
      </tr>
      <tr>
        <td>mood</td>
        <td colspan="3">创建日记时的心情</td>
        <td>enum</td>
        <td>true</td>
      </tr>
      <tr>
        <td>content</td>
        <td colspan="3">创建日记的内容</td>
        <td>longtext</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功创建",
         	"data": {}
         }</pre></span></td>
      </tr>
    </table>
<br>
<table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/todo/create</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">新建待办(可批量)</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>date</td>
        <td colspan="3">创建待办的时间</td>
        <td>datetime</td>
        <td>true</td>
      </tr>
      <tr>
        <td>content</td>
        <td colspan="3">创建待办的内容</td>
        <td>varchar</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功创建",
         	"data": {}
         }</pre></span></td>
      </tr>
    </table>
<br>
<table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/aBook/create</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">新建账本</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>date</td>
        <td colspan="3">创建账本的时间</td>
        <td>datetime</td>
        <td>true</td>
      </tr>
      <tr>
        <td>money</td>
        <td colspan="3">账本的金额</td>
        <td>int</td>
        <td>true</td>
      </tr>
      <tr>
        <td>type</td>
        <td colspan="3">创建账本的类型（收入，支出）</td>
        <td>enum</td>
        <td>true</td>
      </tr>
      <tr>
        <td>mark</td>
        <td colspan="3">创建账本的备注</td>
        <td>varchar(20)</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功创建",
         	"data": {}
         }</pre></span></td>
      </tr>
    </table>
<br>
<table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/hole/create</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">新建树洞话</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>date</td>
        <td colspan="3">树洞的时间</td>
        <td>datetime</td>
        <td>true</td>
      </tr>
      <tr>
        <td>content</td>
        <td colspan="3">树洞的内容</td>
        <td>varchar</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功创建",
         	"data": {}
         }</pre></span></td>
      </tr>
    </table>
<br>
<table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/schedule/create</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">创建课表</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>type</td>
        <td colspan="3">单周还是双周</td>
        <td>tinyint</td>
        <td>true</td>
      </tr>
      <tr>
        <td>content</td>
        <td colspan="3">课程名字</td>
        <td>varchar</td>
        <td>true</td>
      </tr>
      <tr>
        <td>day</td>
        <td colspan="3">一周中的第几天</td>
        <td>tinyint(3)</td>
        <td>true</td>
      </tr>
      <tr>
        <td>section</td>
        <td colspan="3">每天的第几节课</td>
        <td>tinyint(3)</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功创建",
         	"data": {}
         }</pre></span></td>
      </tr>
    </table>
<br>
<h3 id="6、其他（伪代码、类图、思维导图、泳道流程图，对安全、性能、边界情况、性价比的思考）">6、其他（伪代码、类图、思维导图、泳道流程图，对安全、性能、边界情况、性价比的思考）</h3>
<br>
<p>代码方面严格遵循统一的驼峰命名，主要的实体类从数据库的名字来，代码模块化，例如</p>
<img src="/2022/04/14/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE/image-20220416192701364.png" alt="image-20220416192701364">
<img src="/2022/04/14/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE/image-20220416192830943.png" alt="image-20220416192830943">
<p>对于安全来说，我们考虑文件会存在于本地，树洞功能以网络（springboot的java项目）获取数据，总体来说，只要装载app的设备不丢，数据就不会丢。</p>
<h3 id="7、附注（附加的解释和说明、引用资料）">7、附注（附加的解释和说明、引用资料）</h3>
<br>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">引用资料（以github为基础）</span><br><span class="line">https://hndeveloper.github.io/2017/github-android-ui.html</span><br><span class="line"></span><br><span class="line">https://www.runoob.com/w3cnote/android-tutorial-intro.html//入门教程</span><br><span class="line">https://github.com/fashare2015/HoverView//底部抽屉</span><br><span class="line">https://github.com/henrytao-me/smooth-app-bar-layout//视觉布局</span><br><span class="line">https://github.com/arcadefire/nice-spinner//下拉选项</span><br><span class="line">https://github.com/google/flexbox-layout//页面布局</span><br><span class="line">https://github.com/kizitonwose/colorpreference//颜色</span><br><span class="line">https://github.com/ImangazalievM/CircleMenu//圆形菜单按钮</span><br><span class="line">https://github.com/ssseasonnn/PracticalRecyclerView//实用循环浏览</span><br><span class="line">https://github.com/yanbober/SlideLayout//侧滑删除</span><br><span class="line">https://github.com/Scalified/fab//浮动操作按钮设计</span><br><span class="line">https://github.com/SundeepK/CompactCalendarView//日历</span><br><span class="line">https://github.com/skydoves/ElasticViews//点击动画</span><br><span class="line">https://github.com/Chanven/CommonPullToRefresh//下拉刷新</span><br><span class="line">https://github.com/daimajia/NumberProgressBar//进度条</span><br><span class="line">implementation &#x27;com.github.imangazalievm:circlemenu:3.0.0&#x27;//圆形菜单按钮依赖项代码</span><br><span class="line">implementation &quot;com.github.skydoves:elasticviews:2.1.0&quot;//点击动画依赖项代码</span><br><span class="line">        </span><br><span class="line">Material design icons ★29344 - 谷歌官方图标</span><br><span class="line">material-icon-lib ★1917 - 1500个MD风格矢量图标</span><br><span class="line">        </span><br></pre></td></tr></table></figure>
<h3 id="8、分工情况">8、分工情况</h3>
<h5 id="大方向：">大方向：</h5>
<ul class="lvl-0">
<li class="lvl-2">
<p>​		衡先焘    ———— 首页</p>
</li>
<li class="lvl-2">
<p>​        李薇   —————  我的</p>
</li>
<li class="lvl-2">
<p>​        李晨佳 —————添加</p>
</li>
</ul>
<h5 id="4-19-4-26">4.19 - 4.26</h5>
<p>​						衡先焘 ‘首页‘页面整体设计</p>
<p>​					    李薇  ‘我的’页面整体设计</p>
<p>​						李晨佳  ‘添加’页面整体设计</p>
<h5 id="4-27-5-4">4.27 - 5.4</h5>
<p>​					    衡先焘 ’首页待办‘页面设计</p>
<p>​				        李薇 ’我的待办‘页面设计</p>
<p>​				        李晨佳  ’添加待办’页面设计</p>
<h5 id="5-5-5-12">5.5 - 5.12</h5>
<p>​				        衡先焘 ’首页日记，账本‘页面设计</p>
<p>​				        李薇 ’我的日记本，账本‘页面设计</p>
<p>​				        李晨佳  ’添加日记，记账’页面设计</p>
<h5 id="5-13-5-20">5.13 - 5.20</h5>
<p>​						衡先焘 ’首页课表，树洞‘页面设计</p>
<p>​				        李薇 ’我的课表，树洞‘页面设计</p>
<p>​				        李晨佳  ’添加课表，树洞’页面设计</p>
<h5 id="5-21-5-28">5.21 - 5.28</h5>
<p>​                        衡先焘 设计数据库</p>
<p>​				        李薇，李晨佳   整合三个人的代码，底部导航栏的整理</p>
<h5 id="5-29-6-5">5.29 - 6.5</h5>
<p>​                        衡先焘 对接数据库</p>
<p>​					    李薇，李晨佳  测试app，检测bug</p>
<h5 id="6-6-6-11">6.6 - 6.11</h5>
<p>​					    项目上线，后期维护。</p>
<h3 id="9、项目的版本控制">9、项目的版本控制</h3>
<table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">版本</th>
        <th style="color: #23bb68">时间</th>
        <th style="color: #23bb68">主要内容</th>
        <th style="color: #23bb68">主要负责人</th>
        <th style="color: #23bb68">备注</th>
      </tr>
      <tr>
        <td>0.1</td>
        <td>2022.6.12</td>
        <td>最初的功能全部上线</td>
        <td>全部成员</td>
        <td>3人分工</td>
      </tr>
      <tr>
        <td>0.2</td>
        <td>2022.</td>
        <td>敬请期待...</td>
        <td></td>
        <td></td>
      </tr>
      <tr>
        <td>...</td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
      </tr>
      <tr>
        <td>...</td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
      </tr>
    </table>
]]></content>
      <categories>
        <category>开发文档</category>
      </categories>
      <tags>
        <tag>开发文档</tag>
      </tags>
  </entry>
  <entry>
    <title>使用hexo,并部署到page</title>
    <url>/2022/04/12/%E4%BD%BF%E7%94%A8hexo%EF%BC%8C%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0page/</url>
    <content><![CDATA[<p>第一步，安装node和npm<br>
第二步，npm install hexo -g<br>
第三步，hexo init blog<br>
第四步, 进入hexo的根目录第五步, npm install<br>
hexo -s</p>
<h3 id="TODO">TODO</h3>
<table>
<thead>
<tr>
<th>表名</th>
<th>todo</th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>描述</td>
<td>待办</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>主键</td>
<td>id</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>索引</td>
<td>todo_id</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>字段名</td>
<td>描述</td>
<td>类型</td>
<td>默认值</td>
<td>是否必录</td>
</tr>
<tr>
<td>id</td>
<td>主键</td>
<td>bigint(20)</td>
<td>自增</td>
<td>是</td>
</tr>
<tr>
<td>todo_id</td>
<td>todo的标志符号</td>
<td>uuid</td>
<td>uuid</td>
<td>是</td>
</tr>
</tbody>
</table>
<table>
	<tr>
	    <th>属性</th>
	    <th>属性值</th>
	    <th>描述</th>  
	</tr>
	<tr>
	    <td rowspan="9">type</td>
	    <td>text</td>
	    <td>单行文本输入框</td>
	</tr>
	<tr>
	    <td>password</td>
	    <td>密码输入框</td>
	</tr>
	<tr>
	    <td>radio</td>
	    <td>单选按钮</td>
	</tr>
	<tr>
	    <td>CheckBox</td>
	    <td>复选按钮</td>
	</tr>
	<tr><td>button</td>
	    <td>普通按钮</td>
	</tr>
	<tr>
	    <td>submit</td>
	    <td>提交按钮</td>
	</tr>
	<tr>
	    <td>reset</td>
	    <td>重置按钮</td>
	</tr>
	<tr>
	    <td>image</td>
	    <td>图像形式的提交按钮</td>
	</tr>
	<tr>
	    <td>file</td>
	    <td>文件域</td>
	</tr>
	<tr>
	    <td>name</td>
	    <td>用户自定义</td>
	    <td>控件名称</td>
	</tr>
	<tr>
	    <td>value</td>
	    <td>用户自定义</td>
	    <td>默认文本值</td>
	</tr>
	<tr>
	    <td>size</td>
	    <td>正整数</td>
	    <td>控件在页面中的显示宽度</td>
	</tr>
	<tr>
	    <td>checked</td>
	    <td>checked</td>
	    <td>定义选择控件默认被选中项</td>
	</tr>
	<tr>
	    <td>maxlength</td>
	    <td>正整数</td>
	    <td>控件允许输入的最多字符</td>
	</tr>
</table>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>大学生~活便签（2）</title>
    <url>/2022/06/02/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE2/</url>
    <content><![CDATA[<h2 id="大学生-活便签-2">大学生~活便签</h2>
<p>小组成员：衡先焘，李薇，李晨佳</p>
<h3 id="1、概要说明-2">1、概要说明</h3>
<p>背景：作为一名大学生，在经过两年的大学校园生活后，我们经常感到时间总是在不经意间溜走。一次次的点开微信转账、手机银行账单来查看收支；通过学校的公众号来确认课程时间；总是忘记自己的待办事项……这些看似简单的事件却使我们的时间在不经意间浪费。基于以上背景，我们小组意在开发一个app，来帮助大学生通过它提高效率，节省时间，更好的享受大学生活。目标：此app将会包含待办记录、账本、课程表、日记、日历、树洞等功能。通过便签的方式实现方便简洁直观的效果，实现方便大学生活的目标。前景：以上功能虽有app已经实现，但此app面向大学生，功能的设计更符合学生的需求，且将多种功能集于一个app中，可以更高效的提供服务。</p>
<center class="half">
<img src="/2022/06/02/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE2/image-20220416204743200.png" alt="image-20220416204743200" width="140">
<img src="/2022/06/02/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE2/image-20220416204830583.png" alt="image-20220416204830583" width="140">
<img src="/2022/06/02/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE2/image-20220416204851139.png" alt="image-20220416204851139" width="140">
<img src="/2022/06/02/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE2/image-20220416204908872.png" alt="image-20220416204908872" width="140">
</center>
<h3 id="2、表结构及其关系-2">2、表结构及其关系</h3>
<br>
<p>数据库我们采用sqllite，用jetpack下的ROOM框架，以下是5张关系型表，每个表对应一个大的功能块，待办，账单，日记，树洞，课表。</p>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">表名</th>
        <th colspan="5" style="color: #23bb68">tb_todo</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">待办表</td>
      </tr>
      <tr>
        <th>主键</th>
        <td colspan="5">id</td>
      </tr>
      <tr>
        <th>索引</th>
        <td colspan="5">todo_id</td>
      </tr>
      <tr>
        <th>字段名</th>
        <th colspan="2">描述</th>
        <th>类型</th>
        <th>默认值</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>id</td>
        <td colspan="2">内码</td>
        <td>bigint(20)</td>
        <td>自增长</td>
        <td>true</td>
      </tr>
      <tr>
        <td>todo_id</td>
        <td colspan="2">待办的唯一标签</td>
        <td>varchar(50)</td>
        <td>uuid</td>
        <td>true</td>
      </tr>
      <tr>
        <td>todo_content</td>
        <td colspan="2">待办的主要内容</td>
        <td>varchar(200)</td>
        <td>null</td>
        <td>true</td>
      </tr>
      <tr>
        <td>todo_finish</td>
        <td colspan="2">待办的状态（未完成，已完成，丢弃）</td>
        <td>tinyint</td>
        <td>0(未完成)</td>
        <td>true</td>
      </tr>
      <tr>
        <td>todo_date</td>
        <td colspan="2">待办的时间</td>
        <td>datetime</td>
        <td>null</td>
        <td>flase</td>
      </tr>
      <tr>
        <td>......</td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">表名</th>
        <th colspan="5" style="color: #23bb68">tb_aBook</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">账本表</td>
      </tr>
      <tr>
        <th>主键</th>
        <td colspan="5">id</td>
      </tr>
      <tr>
        <th>索引</th>
        <td colspan="5">aBook_id</td>
      </tr>
      <tr>
        <th>字段名</th>
        <th colspan="2">描述</th>
        <th>类型</th>
        <th>默认值</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>id</td>
        <td colspan="2">内码</td>
        <td>bigint(20)</td>
        <td>自增长</td>
        <td>true</td>
      </tr>
      <tr>
        <td>aBook_id</td>
        <td colspan="2">账本的唯一标签</td>
        <td>varchar(50)</td>
        <td>uuid</td>
        <td>true</td>
      </tr>
      <tr>
        <td>aBook_money</td>
        <td colspan="2">账单的金额(元)</td>
        <td>int</td>
        <td>0</td>
        <td>true</td>
      </tr>
      <tr>
        <td>aBook_type</td>
        <td colspan="2">账本类型</td>
        <td>enum</td>
        <td>支出，收入...</td>
        <td>true</td>
      </tr>
      <tr>
        <td>aBook_mark</td>
        <td colspan="2">账本的备注</td>
        <td>varchar(20)</td>
        <td>null</td>
        <td>false</td>
      </tr>
      <tr>
        <td>aBook_date</td>
        <td colspan="2">账单产生的时间</td>
        <td>datetime</td>
        <td>当前的时间</td>
        <td>true</td>
      </tr>
      <tr>
        <td>......</td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">表名</th>
        <th colspan="5" style="color: #23bb68">tb_diary</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">日历表</td>
      </tr>
      <tr>
        <th>主键</th>
        <td colspan="5">id</td>
      </tr>
      <tr>
        <th>索引</th>
        <td colspan="5">diary_id</td>
      </tr>
      <tr>
        <th>字段名</th>
        <th colspan="2">描述</th>
        <th>类型</th>
        <th>默认值</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>id</td>
        <td colspan="2">内码</td>
        <td>bigint(20)</td>
        <td>自增长</td>
        <td>true</td>
      </tr>
      <tr>
        <td>diary_id</td>
        <td colspan="2">日记的唯一标签</td>
        <td>varchar(50)</td>
        <td>uuid</td>
        <td>true</td>
      </tr>
      <tr>
        <td>diary_content</td>
        <td colspan="2">日记的主要内容</td>
        <td>varchar(200)</td>
        <td>null</td>
        <td>true</td>
      </tr>
      <tr>
        <td>diary_date</td>
        <td colspan="2">创建日记的时间</td>
        <td>datetime</td>
        <td>当天的时间</td>
        <td>true</td>
      </tr>
      <tr>
        <td>diary_theme</td>
        <td colspan="2">日历的主题</td>
        <td>varchar</td>
        <td>例如：世界读书日</td>
        <td>true</td>
      </tr>
      <tr>
        <td>diary_weather</td>
        <td colspan="2">当天的天气</td>
        <td>enum</td>
        <td>晴朗，阴...</td>
        <td>true</td>
      </tr>
      <tr>
        <td>diary_mood</td>
        <td colspan="2">当天的心情</td>
        <td>enum</td>
        <td>开心，伤心...</td>
        <td>true</td>
      </tr>
      <tr>
        <td>......</td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">表名</th>
        <th colspan="5" style="color: #23bb68">tb_hole</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">树洞表</td>
      </tr>
      <tr>
        <th>主键</th>
        <td colspan="5">id</td>
      </tr>
      <tr>
        <th>索引</th>
        <td colspan="5">hole_id</td>
      </tr>
      <tr>
        <th>字段名</th>
        <th colspan="2">描述</th>
        <th>类型</th>
        <th>默认值</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>id</td>
        <td colspan="2">内码</td>
        <td>bigint(20)</td>
        <td>自增长</td>
        <td>true</td>
      </tr>
      <tr>
        <td>hole_id</td>
        <td colspan="2">树洞的唯一标签</td>
        <td>varchar(50)</td>
        <td>uuid</td>
        <td>true</td>
      </tr>
      <tr>
        <td>hole_content</td>
        <td colspan="2">树洞的主要内容</td>
        <td>varchar(200)</td>
        <td>null</td>
        <td>true</td>
      </tr>
      <tr>
        <td>hole_date</td>
        <td colspan="2">树洞发布的时间</td>
        <td>datetime</td>
        <td>当前的时间</td>
        <td>true</td>
      </tr>
      <tr>
        <td>......</td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">表名</th>
        <th colspan="5" style="color: #23bb68">tb_schedule</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">课程表</td>
      </tr>
      <tr>
        <th>主键</th>
        <td colspan="5">id</td>
      </tr>
      <tr>
        <th>索引</th>
        <td colspan="5">schedule_id</td>
      </tr>
      <tr>
        <th>字段名</th>
        <th colspan="2">描述</th>
        <th>类型</th>
        <th>默认值</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>id</td>
        <td colspan="2">内码</td>
        <td>bigint(20)</td>
        <td>自增长</td>
        <td>true</td>
      </tr>
      <tr>
        <td>schedule_id</td>
        <td colspan="2">课程的唯一标签</td>
        <td>varchar(50)</td>
        <td>uuid</td>
        <td>true</td>
      </tr>
      <tr>
        <td>schedule_type</td>
        <td colspan="2">课程是否是单双周</td>
        <td>tinyint</td>
        <td>1(单周)</td>
        <td>true</td>
      </tr>
      <tr>
        <td>schedule_content</td>
        <td colspan="2">课表的主要内容</td>
        <td>varchar(200)</td>
        <td>null</td>
        <td>true</td>
      </tr>
      <tr>
        <td>schedule_day</td>
        <td colspan="2">星期几,1-7</td>
        <td>tinyint</td>
        <td>1</td>
        <td>true</td>
      </tr>
      <tr>
        <td>schedule_section</td>
        <td colspan="2">每天第几节课,1-6</td>
        <td>tinyint</td>
        <td>1</td>
        <td>true</td>
      </tr>
      <tr>
        <td>......</td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
      </tr>
    </table>
<br>
<h3 id="3、业务流程图、时序图（按照人操作的维度）-2">3、业务流程图、时序图（按照人操作的维度）</h3>
<br>
<p>用户的操作也主要是集中在：待办，账单，日记，树洞，课表这五个板块</p>
<img src="/2022/06/02/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE2/用户操作流程图.png" alt="用户操作流程图" style="zoom:50%;">
<h3 id="4、程序流程图、时序图（按照代码执行的维度）-2">4、程序流程图、时序图（按照代码执行的维度）</h3>
<br>
<p>待办，账单，日记，树洞，课表这五个功能点将会存在于三个界面，查看浏览界面，添加页面，管理（个人）页面。</p>
<img src="/2022/06/02/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE2/首页-16501064756811.png" alt="首页-16501064756811">
<img src="/2022/06/02/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE2/添加页面-16501064812702.png" alt="添加页面-16501064812702">
<img src="/2022/06/02/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE2/我的页面.png" alt="我的页面">
<h3 id="5、接口约定（对外公开的方法、api-接口等）-2">5、接口约定（对外公开的方法、api 接口等）</h3>
<br>
<p>后端可以考虑采用java系列，springboot是易于实现且十分成熟的后端服务框架，服务器采用 本地tomcat + 阿里云的组合。</p>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/diary/getOne</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">获取日记的detail</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>todo_id</td>
        <td colspan="3">待办的唯一标签</td>
        <td>uuid</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功获取",
         	"data": {
         		"name": "第一个日记",
         		"date": "日记的时间"
         	}
         }</pre></span></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/todo/getByDay</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">获取某一天的待办</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>date</td>
        <td colspan="3">当天的日期，day</td>
        <td>datetime</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功获取",
         	"data": {
         		"name": "第一个日记",
         		"date": "日记的时间"
         	}
         }</pre></span></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/aBook/getByDay</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">按天查询账单</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>date</td>
        <td colspan="3">某一天的日期</td>
        <td>datetime</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功获取",
         	"data": {
         		"name": "第一个日记",
         		"date": "日记的时间"
         	}
         }</pre></span></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/hole/getList/1/10</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">获取树洞的信息，分页，一次十条，restful风格</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>无</td>
        <td colspan="3">不需要参数，参数在url上</td>
        <td>...</td>
        <td>...</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功获取",
         	"data": {[
         		"name": "第一个日记",
         		"date": "日记的时间"
         		],[
         		"name": "第一个日记",
         		"date": "日记的时间"
         		]...
         	}
         }</pre></span></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/schedule/getOne</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">获取当日的课表</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>date</td>
        <td colspan="3">当天的日期</td>
        <td>datetime</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功获取",
         	"data": {[
         		"name": "第一个日记",
         		"date": "日记的时间"
         		],[
         		"name": "第一个日记",
         		"date": "日记的时间"
         		]...
         	}
         }</pre></span></td>
      </tr>
    </table>
<br>
 <table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/diary/create</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">新建日记</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>date</td>
        <td colspan="3">创建日记的时间</td>
        <td>datetime</td>
        <td>true</td>
      </tr>
      <tr>
        <td>theme</td>
        <td colspan="3">日记的主题</td>
        <td>varchar</td>
        <td>true</td>
      </tr>
      <tr>
        <td>weather</td>
        <td colspan="3">创建日记的天气</td>
        <td>enum</td>
        <td>true</td>
      </tr>
      <tr>
        <td>mood</td>
        <td colspan="3">创建日记时的心情</td>
        <td>enum</td>
        <td>true</td>
      </tr>
      <tr>
        <td>content</td>
        <td colspan="3">创建日记的内容</td>
        <td>longtext</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功创建",
         	"data": {}
         }</pre></span></td>
      </tr>
    </table>
<br>
<table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/todo/create</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">新建待办(可批量)</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>date</td>
        <td colspan="3">创建待办的时间</td>
        <td>datetime</td>
        <td>true</td>
      </tr>
      <tr>
        <td>content</td>
        <td colspan="3">创建待办的内容</td>
        <td>varchar</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功创建",
         	"data": {}
         }</pre></span></td>
      </tr>
    </table>
<br>
<table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/aBook/create</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">新建账本</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>date</td>
        <td colspan="3">创建账本的时间</td>
        <td>datetime</td>
        <td>true</td>
      </tr>
      <tr>
        <td>money</td>
        <td colspan="3">账本的金额</td>
        <td>int</td>
        <td>true</td>
      </tr>
      <tr>
        <td>type</td>
        <td colspan="3">创建账本的类型（收入，支出）</td>
        <td>enum</td>
        <td>true</td>
      </tr>
      <tr>
        <td>mark</td>
        <td colspan="3">创建账本的备注</td>
        <td>varchar(20)</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功创建",
         	"data": {}
         }</pre></span></td>
      </tr>
    </table>
<br>
<table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/hole/create</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">新建树洞话</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>date</td>
        <td colspan="3">树洞的时间</td>
        <td>datetime</td>
        <td>true</td>
      </tr>
      <tr>
        <td>content</td>
        <td colspan="3">树洞的内容</td>
        <td>varchar</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功创建",
         	"data": {}
         }</pre></span></td>
      </tr>
    </table>
<br>
<table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">接口\方法</th>
        <th colspan="5" style="color: #23bb68">/schedule/create</th>
      </tr>
      <tr>
        <th>描述</th>
        <td colspan="5">创建课表</td>
      </tr>
      <tr>
        <th>方式</th>
        <td colspan="5">POST</td>
      </tr>
      <tr>
        <th>传参方式</th>
        <td colspan="5">application/json</td>
      </tr>
      <tr>
        <th>参数名</th>
        <th colspan="3">描述</th>
        <th>类型</th>
        <th>是否必录</th>
      </tr>
      <tr>
        <td>type</td>
        <td colspan="3">单周还是双周</td>
        <td>tinyint</td>
        <td>true</td>
      </tr>
      <tr>
        <td>content</td>
        <td colspan="3">课程名字</td>
        <td>varchar</td>
        <td>true</td>
      </tr>
      <tr>
        <td>day</td>
        <td colspan="3">一周中的第几天</td>
        <td>tinyint(3)</td>
        <td>true</td>
      </tr>
      <tr>
        <td>section</td>
        <td colspan="3">每天的第几节课</td>
        <td>tinyint(3)</td>
        <td>true</td>
      </tr>
      <tr>
        <th colspan="6">输出</th>
      </tr>
      <tr>
        <td colspan="6"><span><pre>         
        {
         	"code": 200,
         	"msg": "成功创建",
         	"data": {}
         }</pre></span></td>
      </tr>
    </table>
<br>
<h3 id="6、其他（伪代码、类图、思维导图、泳道流程图，对安全、性能、边界情况、性价比的思考）-2">6、其他（伪代码、类图、思维导图、泳道流程图，对安全、性能、边界情况、性价比的思考）</h3>
<br>
<p>代码方面严格遵循统一的驼峰命名，主要的实体类从数据库的名字来，代码模块化，例如</p>
<p>对于安全来说，我们考虑文件会存在于本地，树洞功能以网络（springboot的java项目）获取数据，总体来说，只要装载app的设备不丢，数据就不会丢。</p>
<h3 id="7、附注（附加的解释和说明、引用资料）-2">7、附注（附加的解释和说明、引用资料）</h3>
<br>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">引用资料（以github为基础）</span><br><span class="line">    implementation fileTree(dir: &quot;libs&quot;, include: [&quot;*.jar&quot;, &quot;*.aar&quot;])</span><br><span class="line">    implementation project(&quot;:architecture&quot;)</span><br><span class="line">    implementation &quot;org.jetbrains:annotations:23.0.0&quot;</span><br><span class="line">    implementation &#x27;androidx.legacy:legacy-support-v4:1.0.0&#x27;</span><br><span class="line">    implementation &#x27;androidx.lifecycle:lifecycle-livedata-ktx:2.3.1&#x27;</span><br><span class="line">    testImplementation &quot;junit:junit:4.13.2&quot;</span><br><span class="line">    androidTestImplementation &quot;androidx.test.ext:junit:1.1.3&quot;</span><br><span class="line">    androidTestImplementation &quot;androidx.test.espresso:espresso-core:3.4.0&quot;</span><br><span class="line">    implementation &quot;androidx.constraintlayout:constraintlayout:2.1.3&quot;</span><br><span class="line">    implementation &quot;androidx.room:room-runtime:$roomVersion&quot;</span><br><span class="line">    annotationProcessor &quot;androidx.room:room-compiler:$roomVersion&quot;</span><br><span class="line">    implementation &quot;com.google.android.material:material:1.5.0&quot;</span><br><span class="line">    implementation &quot;androidx.recyclerview:recyclerview:1.2.1&quot;</span><br><span class="line">    </span><br><span class="line">    implementation &quot;com.kunminx.arch:binding-recyclerview:3.9.0-beta1&quot;</span><br><span class="line">    implementation &quot;com.kunminx.player:player:3.3.0&quot;</span><br><span class="line">    implementation &quot;com.google.code.gson:gson:2.9.0&quot;</span><br><span class="line">    implementation &quot;org.slf4j:slf4j-android:1.7.36&quot;</span><br><span class="line">    implementation &quot;com.github.bumptech.glide:glide:4.13.2&quot;</span><br><span class="line">    implementation &quot;com.sothree.slidinguppanel:library:3.4.0&quot;</span><br><span class="line"></span><br><span class="line">    implementation &quot;com.squareup.retrofit2:retrofit:$retrofitVersion&quot;</span><br><span class="line">    implementation &quot;com.squareup.retrofit2:converter-gson:$retrofitVersion&quot;</span><br><span class="line">    implementation &quot;com.squareup.okhttp3:logging-interceptor:$okHttpVersion&quot;</span><br><span class="line">    implementation &quot;com.squareup.okhttp3:okhttp:$okHttpVersion&quot;</span><br><span class="line"></span><br><span class="line">    implementation &#x27;com.github.getActivity:XXPermissions:13.6&#x27;</span><br><span class="line"></span><br><span class="line">    implementation(&quot;cn.hutool:hutool-all:5.7.22&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        </span><br></pre></td></tr></table></figure>
<h3 id="8、进度情况">8、进度情况</h3>
<p>4.26定下了第一版的大致UI</p>
<p><img src="/2022/06/02/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE2/image-20220603212248253.png" alt="image-20220603212248253"></p>
<p><strong>截止5.12号</strong></p>
<p>李薇完成了：初步的UI （XML）</p>
<p>李晨佳完成了 ： 数据库的大致建立</p>
<p>衡先焘：整合代码，编写逻辑控制语句</p>
<p>+++++++++++++++++++++++++++++++++++++++</p>
<p><strong>引入Jetpack框架，进行了代码的重构</strong></p>
<p><a class="link" href="https://www.bilibili.com/video/BV1Ry4y1t7Tj">https://www.bilibili.com/video/BV1Ry4y1t7Tj<i class="fas fa-external-link-alt"></i></a></p>
<p>（<a class="link" href="https://github.com/KunMinX/Jetpack-MVVM-Best-Practice">KunMinX/Jetpack-MVVM-Best-Practice: 是 难得一见 的 Jetpack MVVM 最佳实践！在 以简驭繁 的代码中，对 视图控制器 乃至 标准化开发模式 形成正确、深入的理解！ (github.com)<i class="fas fa-external-link-alt"></i></a>）</p>
<p>+++++++++++++++++++++++++++++++++++++++++++++++</p>
<p><strong>截止5.28号</strong></p>
<p>李薇完成了：继续更新UI</p>
<p>李晨佳完成了 ： 数据库的深入学习</p>
<p>衡先焘完成了 ：UI的，数据库的整合，逻辑的重构</p>
<h3 id="9、架构结构">9、架构结构</h3>
<p><img src="/2022/06/02/%E3%80%90%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E3%80%91%E5%A4%A7%E5%AD%A6%E7%94%9F~%E6%B4%BB%E4%BE%BF%E7%AD%BE2/colifestote%E6%9E%B6%E6%9E%84%E5%9B%BE.png" alt="colifestote架构图"></p>
<h3 id="10、项目的版本控制">10、项目的版本控制</h3>
<table>
       <style>
            th,td{
                text-align: left;
            }
     </style>
      <tr>
        <th style="color: #23bb68">版本</th>
        <th style="color: #23bb68">时间</th>
        <th style="color: #23bb68">主要内容</th>
        <th style="color: #23bb68">主要负责人</th>
        <th style="color: #23bb68">备注</th>
      </tr>
      <tr>
        <td>0.1</td>
        <td>2022.6.4</td>
        <td>最初的功能大致上线</td>
        <td>全部成员</td>
        <td>3人分工</td>
      </tr>
      <tr>
        <td>0.2</td>
        <td>2022.</td>
        <td>敬请期待...</td>
        <td></td>
        <td></td>
      </tr>
      <tr>
        <td>...</td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
      </tr>
      <tr>
        <td>...</td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
      </tr>
    </table>
]]></content>
      <categories>
        <category>开发文档</category>
      </categories>
      <tags>
        <tag>开发文档</tag>
      </tags>
  </entry>
  <entry>
    <title>依赖反转原则DIP</title>
    <url>/2022/06/23/%E4%BE%9D%E8%B5%96%E5%8F%8D%E8%BD%AC%E5%8E%9F%E5%88%99DIP/</url>
    <content><![CDATA[<p>本文是阅读架构整洁之道2018 (（美）Robert C. Martin（罗伯特 C. 马丁）) (<a class="link" href="http://z-lib.org">z-lib.org<i class="fas fa-external-link-alt"></i></a>) 之后的整理。（侵删）</p>
<p><a class="link" href="https://en.wikipedia.org/wiki/SOLID">SOLID - Wikipedia<i class="fas fa-external-link-alt"></i></a></p>
<h2 id="五、依赖反转原则DIP">五、依赖反转原则DIP</h2>
<p>依赖反转原则（DIP）主要想告诉我们的是，如果想要设计一个灵 活的系统，在源代码层次的依赖关系中就应该多引用抽象类型，而非 具体实现。</p>
<h3 id="稳定的抽象层">稳定的抽象层</h3>
<p>**应在代码中多使用抽象接口，尽量避免使用那些多变的具体实现类。**这条守则适用于所有编程语言，无论静态类型语言还是动态类型 语言。同时，对象的创建过程也应该受到严格限制，对此，我们通常 会选择用抽象工厂（abstract factory）这个设计模式。</p>
<p>**不要在具体实现类上创建衍生类。上一条守则虽然也隐含了这层 意思，但它还是值得被单独拿出来做一次详细声明。**在静态类型的编 程语言中，继承关系是所有一切源代码依赖关系中最强的、最难被修 改的，所以我们对继承的使用应该格外小心。即使是在稍微便于修改 的动态类型语言中，这条守则也应该被认真考虑。</p>
<p>**不要覆盖（override）包含具体实现的函数。调用包含具体实现 的函数通常就意味着引入了源代码级别的依赖。**即使覆盖了这些函 数，我们也无法消除这其中的依赖——这些函数继承了那些依赖关 系。在这里，控制依赖关系的唯一办法，就是创建一个抽象函数，然 后再为该函数提供多种具体实现。</p>
<p>**应避免在代码中写入与任何具体实现相关的名字，或者是其他容 易变动的事物的名字。**这基本上是DIP原则的另外一个表达方式。</p>
]]></content>
      <categories>
        <category>软件开发设计原则</category>
      </categories>
      <tags>
        <tag>设计</tag>
      </tags>
  </entry>
  <entry>
    <title>分治法解决括号匹配</title>
    <url>/2022/04/12/%E5%88%86%E6%B2%BB%E6%B3%95%E8%A7%A3%E5%86%B3%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D/</url>
    <content><![CDATA[<h2 id="实验问题">实验问题</h2>
<h4 id="n对括号有多少种匹配方式？比如两对括号可以有两种：（）（）和（（））-。">n对括号有多少种匹配方式？比如两对括号可以有两种：（）（）和（（）） 。</h4>
<br>
<h2 id="实验报告">实验报告</h2>
<h3 id="1️⃣方案">1️⃣方案</h3>
<h4 id="首先，看到括号匹配，我想到了栈，栈的入栈和出栈，只要最后栈为空就行。然后想了想，没有递归，就放弃了栈的思考，追求分治和递归。">首先，看到括号匹配，我想到了栈，栈的入栈和出栈，只要最后栈为空就行。然后想了想，没有递归，就放弃了栈的思考，追求分治和递归。</h4>
<br>
<h4 id="定义变量">定义变量</h4>
<p>用<mark>leftNum</mark>代表未被放的左括号数，<mark>rightNum</mark>代表未被放的右括号数目，那么初始情况就是leftNum==rightNum;</p>
<p>当leftNum和rightNum全部被放完时，就把括号全部放完了。</p>
<h4 id="思路">思路</h4>
<p>把每一次leftNum等于rightNum的时，都视为一对，例如第一次执行的时候，先不看递归，if(leftNum&gt;0) 和if(rightNum&gt;0)都是成立的，那么这一对括号一定是先左括号后右括号，一定是匹配成立的。那么子问题就是每一对左右括号的放置。</p>
<h4 id="实际情况：">实际情况：</h4>
<p>1、一对括号。我先放左括号，后放右括号，就匹配成功。（）</p>
<p>2、两对括号。先放左括号，后放右括号。为了实现左右括号是在随机的时间段放置的，只需要递归一下，就可以得出很多的结果。如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">generate</span><span class="params">(<span class="type">int</span> leftNum, <span class="type">int</span> rightNum, String s)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (leftNum == <span class="number">0</span> &amp;&amp; rightNum == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (leftNum &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            generate(leftNum - <span class="number">1</span>, rightNum, s + <span class="string">&#x27;(&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (rightNum &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            generate(leftNum, rightNum - <span class="number">1</span>, s + <span class="string">&#x27;)&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>结果如下</p>
<img src="/2022/04/12/%E5%88%86%E6%B2%BB%E6%B3%95%E8%A7%A3%E5%86%B3%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D/0b340e0b8940beb2053ea9428a442c7a.png" alt="截图" style="zoom:50%;">
<h5 id="DEBUG">DEBUG</h5>
<p>发现出现了不合法的匹配。先通过打印各个时间点出现的括号来判断问题出现在了哪儿？修改代码如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (leftNum &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;lefNum: &quot;</span> + leftNum + <span class="string">&quot;;rightNum: &quot;</span> + rightNum + <span class="string">&quot;;此时执行的括号是：(&quot;</span>);</span><br><span class="line">    generate(leftNum - <span class="number">1</span>, rightNum, s + <span class="string">&#x27;(&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (rightNum &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;lefNum: &quot;</span> + leftNum + <span class="string">&quot;;rightNum: &quot;</span> + rightNum + <span class="string">&quot;此时执行的括号是：)&quot;</span>);</span><br><span class="line">    generate(leftNum, rightNum - <span class="number">1</span>, s + <span class="string">&#x27;)&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>截取一段结果就能发现</p>
<img src="/2022/04/12/%E5%88%86%E6%B2%BB%E6%B3%95%E8%A7%A3%E5%86%B3%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D/1af6d7d4671c881d71fb8fbddb50c2bd.png" alt="截图" style="zoom:50%;">
<p>这一块标红的地方他做了先右后左的操作，仔细观察此时的leftNum和rightNum可以发现：合法的括号对都有个特点，从左向右取子段，左括号数目都大于右括号，例如</p>
<p><mark>(())<mark>中取前2个</mark>((</mark>，然后就是左括号为2，右括号为0，左&gt;右（匹配）</p>
<p><mark>)(()<mark>中取前2个</mark>)(</mark>，然后就是左括为1，右括号为1，左==右（不匹配）</p>
<p>那么就是要先用更多的左括号，即是leftNum &lt; rightNum 于是代码修改</p>
<br>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">generate</span><span class="params">(<span class="type">int</span> leftNum, <span class="type">int</span> rightNum, String s)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (leftNum == <span class="number">0</span> &amp;&amp; rightNum == <span class="number">0</span>) &#123;</span><br><span class="line">        System.out.println(s);</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (leftNum &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;lefNum: &quot;</span> + leftNum + <span class="string">&quot;;rightNum: &quot;</span> + rightNum + <span class="string">&quot;;此时执行的括号是：(&quot;</span>);</span><br><span class="line">        generate(leftNum - <span class="number">1</span>, rightNum, s + <span class="string">&#x27;(&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (rightNum &gt; <span class="number">0</span> &amp;&amp; leftNum &lt; rightNum) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;lefNum: &quot;</span> + leftNum + <span class="string">&quot;;rightNum: &quot;</span> + rightNum + <span class="string">&quot;此时执行的括号是：)&quot;</span>);</span><br><span class="line">        generate(leftNum, rightNum - <span class="number">1</span>, s + <span class="string">&#x27;)&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>经过测试，当2对括号的时候，结果正确，()(),(())。</p>
<p>3、大于等于三对括号。通过两对括号的解法，算出3对括号有5种，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">((()))  (()())  (())()  ()(())  ()()()</span><br></pre></td></tr></table></figure>
<p>并且这5种均是成功匹配，自己也画不出第6种了。括号对数再大就难易手动判断了。</p>
<br>
<h3 id="2️⃣适用分治法的原因">2️⃣适用分治法的原因</h3>
<h4 id="1、当问题规模缩小到一对，两对括号时会比较容易的解决。">1、当问题规模缩小到一对，两对括号时会比较容易的解决。</h4>
<h4 id="2、问题可以分解到若干个规模较小的相同问题，具有最优子结构性质。">2、问题可以分解到若干个规模较小的相同问题，具有最优子结构性质。</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">将整个问题用分成很多个小问题——对每一组括号先放左括号后方右括号。</span><br></pre></td></tr></table></figure>
<h4 id="3、利用该问题分解出的子问题的解可以合并为该问题的解。">3、利用该问题分解出的子问题的解可以合并为该问题的解。</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">当每一对的括号都正确的匹配放置，那么整个括号大组就匹配正确了。</span><br></pre></td></tr></table></figure>
<h4 id="4、问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子子问题。">4、问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子子问题。</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">每一对括号的放置都是相互独立的。</span><br></pre></td></tr></table></figure>
<br>
<h3 id="3️⃣完整代码">3️⃣完整代码</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入有几对括号：&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (sc.hasNext()) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="type">String</span> <span class="variable">n</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            count = <span class="number">0</span>;</span><br><span class="line">            generate(m, m, n);</span><br><span class="line">            System.out.println(count);</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入有几对括号：&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">generate</span><span class="params">(<span class="type">int</span> leftNum, <span class="type">int</span> rightNum, String s)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (leftNum == <span class="number">0</span> &amp;&amp; rightNum == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (leftNum &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;lefNum: &quot;</span> + leftNum + <span class="string">&quot;;rightNum: &quot;</span> + rightNum + <span class="string">&quot;;此时执行的括号是：(&quot;</span>);</span><br><span class="line">            generate(leftNum - <span class="number">1</span>, rightNum, s + <span class="string">&#x27;(&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (rightNum &gt; <span class="number">0</span> &amp;&amp; leftNum &lt; rightNum) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;lefNum: &quot;</span> + leftNum + <span class="string">&quot;;rightNum: &quot;</span> + rightNum + <span class="string">&quot;此时执行的括号是：)&quot;</span>);</span><br><span class="line">            generate(leftNum, rightNum - <span class="number">1</span>, s + <span class="string">&#x27;)&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<h2 id="总结与讨论">总结与讨论</h2>
<h5 id="在本次实验中，我对分治的了解更加深入了。分治解决问题时，要多多关注小问题，从小的方向入手，先算当规模小的时候，这道题就是先算1对。2对，慢慢找规律。">在本次实验中，我对分治的了解更加深入了。分治解决问题时，要多多关注小问题，从小的方向入手，先算当规模小的时候，这道题就是先算1对。2对，慢慢找规律。</h5>
<p>找规律是个漫长的过程，最开始我想的是：放两对括号就是在一对括号的基础上加上左右括号，把这个问题处理成排列组合，可是这样犯了分治的一个大问题——小问题之间是相互独立的，而我这种处理方式每次都是在前一次的基础上加括号，排列组合的位置也在不断变化。后面我就抛弃了这个办法，并且这个办法在实践时很难处理，当规模到3对时就已经难弄了。</p>
<h5 id="对于此次实验，个人感觉是成功的！">对于此次实验，个人感觉是成功的！</h5>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>分治法</tag>
      </tags>
  </entry>
  <entry>
    <title>动态规划法解决最大子矩阵</title>
    <url>/2022/05/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%A7%A3%E5%86%B3%E6%9C%80%E5%A4%A7%E7%9F%A9%E9%98%B5/</url>
    <content><![CDATA[<h2 id="实验问题-2">实验问题</h2>
<h4 id="最大子矩阵和">最大子矩阵和</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">已知矩阵的大小定义为矩阵中所有元素的和。给定一个矩阵，你的任务是找到最大的非空(大小至少是1 × 1)子矩阵。</span><br><span class="line">输入：</span><br><span class="line">一个N×N的矩阵。输入的第一行给出N(0&lt;N≤100)。再后面的若干行中，依次(首先从左到右给出第一行的N个整数，</span><br><span class="line">再从左到右给出第二行的N个整数……)给出矩阵中的N2个整数，整数之间由空白字符分隔(空格或者空行)。</span><br><span class="line">已知矩阵中整数的范围都在[−127,127]。</span><br><span class="line">输出：</span><br><span class="line">最大子矩阵的大小。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
<h2 id="实验报告-2">实验报告</h2>
<h3 id="1️⃣方案-2">1️⃣方案</h3>
<p>假设矩阵如下：（括号里的数是例子）</p>
<table>
<thead>
<tr>
<th></th>
<th>第一列</th>
<th>第二列</th>
<th>第三列</th>
<th>第四列</th>
</tr>
</thead>
<tbody>
<tr>
<td>第一行</td>
<td>a11 （-5）</td>
<td>a12（-3）</td>
<td>a13（-6）</td>
<td>a14（1）</td>
</tr>
<tr>
<td>第二行</td>
<td>a21（2）</td>
<td>a22（-30）</td>
<td><mark>a23（50）</mark></td>
<td><mark>a24（10）</mark></td>
</tr>
<tr>
<td>第三行</td>
<td>a31（3）</td>
<td>a32（-12）</td>
<td><mark>a33（10）</mark></td>
<td><mark>a34（3）</mark></td>
</tr>
<tr>
<td>第四行</td>
<td>a41（7）</td>
<td>a42（-9）</td>
<td>a43（-5）</td>
<td>a44（-3）</td>
</tr>
</tbody>
</table>
<p>其中标黄的部分为最大子矩阵</p>
<p>如果通过枚举出这个母矩阵的所有子矩阵，再计算出矩阵的大小，时间复杂度将达到  O (n^6)，很明显不可取。这时候就需要通过动态规划去存储一些中间值，降低重复计算。</p>
<p>通过观察，可以发现，把子矩阵的每一列加起来，构成(a23+a33，a24+a34)这样的列之和矩阵，这样的矩阵有什么用呢？</p>
<p>当我们再向外扩展一个矩阵（a22+a32，a23+a33，a24+a34)，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">     (a23+a33，a24+a34)  ----- &gt;  (60, 13)                  ①</span><br><span class="line"></span><br><span class="line">     (a22+a32，a23+a33，a24+a34) ----- &gt; (-42, 60, 13)      ②</span><br><span class="line"></span><br><span class="line">①序列是②序列的最大字段和。</span><br></pre></td></tr></table></figure>
<p>同理  ①序列也是 第二行和第三行所有列元素之和构成的序列即 （a21+a31，a22+a32，a23+a33，a24+a34）的最大字段和。</p>
<p>构造一个这样的序列可以通过一个简单的循环做到</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>; k &lt;= n; k++) &#123;</span><br><span class="line">          row[k] += matrix[j][k];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// TODO</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// 这样做可以实现: 从首行开始，对下面的每一列依次加起来，一列一列加的过程是开放的，可以做其他任务。</span></span><br><span class="line"><span class="comment">// 但是有个问题是，不是每个子矩阵都要包含首行，所有需要加一层循环，使之可以从其他行开始。</span></span><br><span class="line"><span class="comment">// 以下使对此做出的修改</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    Arrays.fill(row, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i; j &lt;= n; j++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>; k &lt;= n; k++) &#123;</span><br><span class="line">        row[k] += matrix[j][k];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// TODO</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>接下来就是写最大子段和的代码。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> row 每一列的数加起来的数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> n   最大子序列的最终位</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xth</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/5/3 18:02</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 找最大子序列的算法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">maxArray</span><span class="params">(<span class="type">int</span>[] row, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> INF;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (sum &gt; <span class="number">0</span>) sum += row[i];</span><br><span class="line">        <span class="keyword">else</span> sum = row[i];</span><br><span class="line">        max = Math.max(max, sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面这一段代码就用到动态规划的思想。</p>
<img src="/2022/05/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%A7%A3%E5%86%B3%E6%9C%80%E5%A4%A7%E7%9F%A9%E9%98%B5/image-20220505160710337.png" alt="image-20220505160710337">
<p>测试结果</p>
<img src="/2022/05/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%A7%A3%E5%86%B3%E6%9C%80%E5%A4%A7%E7%9F%A9%E9%98%B5/image-20220505160736202.png" alt="image-20220505160736202">
<br>
<h3 id="2️⃣适用动态规划法的原因">2️⃣适用动态规划法的原因</h3>
<h4 id="1、问题满足最优性原理：具有最优子结构性质">1、问题满足最优性原理：具有最优子结构性质</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">子问题是去掉一行或者一列的数据，这么做之后仍能找到最优解。</span><br></pre></td></tr></table></figure>
<br>
<h4 id="2、问题可以分解到若干个规模较小的相同问题，且每个问题之间不是独立的">2、问题可以分解到若干个规模较小的相同问题，且每个问题之间不是独立的</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">当问题被分解到1×1时候，最大矩阵就是 a11，当规模扩大到  2× 2时候，找到的解就要要求去和 1× 1的解做比较，这样才能判断最后的解是否是最优的。</span><br></pre></td></tr></table></figure>
<br>
<br>
<h3 id="3️⃣完整代码-2">3️⃣完整代码</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> dynamicProgramming;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 11468</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MaxMatrix</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">INF</span> <span class="operator">=</span> -<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 输入矩阵</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;输入矩阵的大小&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span>[][] matrix = <span class="keyword">new</span> <span class="title class_">int</span>[n + <span class="number">1</span>][n + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">                matrix[i][j] = scanner.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 归并一列的数到一个新的数组</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> INF;</span><br><span class="line">        <span class="type">int</span>[] row = <span class="keyword">new</span> <span class="title class_">int</span>[n + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            Arrays.fill(row, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i; j &lt;= n; j++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>; k &lt;= n; k++) &#123;</span><br><span class="line">                    row[k] += matrix[j][k];</span><br><span class="line">                &#125;</span><br><span class="line">                max = Math.max(max, maxArray(row, n));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;最大子矩阵是: &quot;</span> + max);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> row 每一列的数加起来的数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n   最大子序列的最终位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xth</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2022/5/3 18:02</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 找最大子序列的算法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">maxArray</span><span class="params">(<span class="type">int</span>[] row, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> INF;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (sum &gt; <span class="number">0</span>) sum += row[i];</span><br><span class="line">            <span class="keyword">else</span> sum = row[i];</span><br><span class="line">            max = Math.max(max, sum);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
<h2 id="总结与讨论-2">总结与讨论</h2>
<h5 id="动态规划解题步骤：">动态规划解题步骤：</h5>
<p>（1）、划分子问题， 找到子问题的边界。</p>
<p>（2）、构建状态转移方程（分析）。列优化函数的递推方程和边界条件</p>
<p>（3）、存储状态的值求解（填表）。自底向上计算，设计备忘录 (表格）</p>
<p>在本次实验中以上三个问题都得到了很好的体现，使我对动态规划的理解更加的深入了，更能理解动态规划算法。</p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
      </tags>
  </entry>
  <entry>
    <title>动态规划法解决最大长方体</title>
    <url>/2022/05/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%A7%A3%E5%86%B3%E6%9C%80%E5%A4%A7%E9%95%BF%E6%96%B9%E4%BD%93/</url>
    <content><![CDATA[<h2 id="实验问题-3">实验问题</h2>
<h4 id="最大长方体">最大长方体</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">一个长,宽,高分别是m,n,p的长方体被分割成m*n*p个小立方体。每个小立方体内含一个整数。</span><br><span class="line">试着设计一个算法，计算所给长方体的最大子长方体。子长方体的大小由它内部所含所有整数之和确定。</span><br><span class="line">约定：当该长方体所有元素均为负数时,输出最大子长方体为0。</span><br><span class="line">输入：</span><br><span class="line">  第一行3个正整数m,n,p，其中 1&lt;=m,n,p&lt;=50 接下来的m*n行中每行p个整数，表示小立方体中的数。</span><br><span class="line">输出：</span><br><span class="line">  计算出的最大子长方体的大小。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
<h2 id="实验报告-3">实验报告</h2>
<h3 id="1️⃣方案-3">1️⃣方案</h3>
<p>思想同最大子矩阵和，把三维的矩阵先转成二维，就变成了求最大子矩阵和的问题，再转成一维就成了求最大子段和的问题。</p>
<img src="/2022/05/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%A7%A3%E5%86%B3%E6%9C%80%E5%A4%A7%E9%95%BF%E6%96%B9%E4%BD%93/image-20220505161024115.png" alt="image-20220505161024115">
<p>例如图中被标记的两个小方块，假设这两个（1号和2号）构成了最大的长方体，那么加上3号时候，这个长方体的大小将会减小，</p>
<p>可以近似将这三个小正方体抽象成  （1，2，3），其中最大的是（1，2），后者是前者的最大子段和，所以从高度上要找到一个最大的子段。</p>
<p>接着考虑在忽略高度的情况下（假设确定了高度）,找一个面中最大的组合，问题完全等同于动态规划解决最大子矩阵和。</p>
<br>
<p>测试结果（测试样例来自网络）</p>
<img src="/2022/05/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%A7%A3%E5%86%B3%E6%9C%80%E5%A4%A7%E9%95%BF%E6%96%B9%E4%BD%93/image-20220505161041232.png" alt="image-20220505161041232">
<br>
<h3 id="2️⃣适用动态规划法的原因-2">2️⃣适用动态规划法的原因</h3>
<h4 id="1、问题满足最优性原理：具有最优子结构性质-2">1、问题满足最优性原理：具有最优子结构性质</h4>
<br>
<h4 id="2、问题可以分解到若干个规模较小的相同问题，且每个问题之间不是独立的-2">2、问题可以分解到若干个规模较小的相同问题，且每个问题之间不是独立的</h4>
<br>
<br>
<h3 id="3️⃣完整代码-3">3️⃣完整代码</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> dynamicProgramming;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 11468</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MaxCuboid</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">INF</span> <span class="operator">=</span> -<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入长方体的长宽高&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">p</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="comment">// 定义并输入三维数组</span></span><br><span class="line">        <span class="type">int</span>[][][] cuboid = <span class="keyword">new</span> <span class="title class_">int</span>[m + <span class="number">1</span>][n + <span class="number">1</span>][p + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>; k &lt;= p; k++) &#123;</span><br><span class="line">                    cuboid[i][j][k] = scanner.nextInt();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 将三维的数组转成二维</span></span><br><span class="line">        <span class="type">int</span>[][] matrix = <span class="keyword">new</span> <span class="title class_">int</span>[m + <span class="number">1</span>][n + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= p; i++) &#123;</span><br><span class="line">            <span class="comment">// 置零</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>; k &lt;= m; k++) Arrays.fill(matrix[k], <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i; j &lt;= p; j++) &#123;</span><br><span class="line">                <span class="comment">// 压缩高度到一个面上</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>; k &lt;= m; k++) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">1</span>; l &lt;= n; l++) &#123;</span><br><span class="line">                        matrix[k][l] += cuboid[k][l][j];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                max = Math.max(max, maxMatrix(matrix, m, n));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;最大长方体是: &quot;</span> + max);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xth</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2022/5/3 20:12</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> flour 面，子矩阵</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> m 长</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n 宽</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 求最大子矩阵</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int max</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">maxMatrix</span><span class="params">(<span class="type">int</span>[][] flour, <span class="type">int</span> m, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> INF;</span><br><span class="line">        <span class="type">int</span>[] raw = <span class="keyword">new</span> <span class="title class_">int</span>[n + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">            Arrays.fill(raw, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i; j &lt;= m; j++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>; k &lt;= n; k++) &#123;</span><br><span class="line">                    raw[k] += flour[j][k];</span><br><span class="line">                &#125;</span><br><span class="line">                max = Math.max(max, maxArray(raw, n));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xth</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2022/5/3 20:12</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> raw 序列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n 序列长度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 求最长子序列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int max</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">maxArray</span><span class="params">(<span class="type">int</span>[] raw, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> INF;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (sum &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                sum += raw[i];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sum = raw[i];</span><br><span class="line">            &#125;</span><br><span class="line">            max = Math.max(max, sum);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
<h2 id="总结与讨论-3">总结与讨论</h2>
<h5 id="动态规划解题步骤：-2">动态规划解题步骤：</h5>
<p>（1）、划分子问题， 找到子问题的边界。</p>
<p>（2）、构建状态转移方程（分析）。列优化函数的递推方程和边界条件</p>
<p>（3）、存储状态的值求解（填表）。自底向上计算，设计备忘录 (表格）</p>
<p>这个问题是在最大矩阵和上的深入，扩展到了三维空间，理解上加深了难度，但按照最大矩阵和的做法一步一步的实现，最终也是能成功实现。</p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
      </tags>
  </entry>
  <entry>
    <title>Enjoy开发文档</title>
    <url>/2022/04/23/%E5%8D%93%E9%9F%B3%E6%89%93%E5%8D%A1%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<img src="/2022/04/23/%E5%8D%93%E9%9F%B3%E6%89%93%E5%8D%A1%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/clip_image002-16506817747051.png" alt="img"> 
<h1>卓尔不凡，音你精彩，We are in JOIN</h1>
<h1>——Enjoy开发文档</h1>
<p>题目：卓尔不凡，音你精彩，We are in JOIN。——Enjoy开发文档</p>
<p>产品名：Enjoy</p>
<p>开发组：</p>
<p><strong>当前版本：</strong></p>
<table>
<thead>
<tr>
<th>文档版本号</th>
<th>3.0</th>
<th>文档编号</th>
<th>2022001</th>
</tr>
</thead>
<tbody>
<tr>
<td>文档密级</td>
<td>项目组成员可见</td>
<td>归属部门</td>
<td>卓音工作室</td>
</tr>
<tr>
<td>产品名</td>
<td>Enjoy</td>
<td>子系统名</td>
<td>无</td>
</tr>
<tr>
<td>编写人</td>
<td>徐柳、衡先焘、俞琼瑶</td>
<td>编写日期</td>
<td>20220418</td>
</tr>
</tbody>
</table>
<p>版本记录：</p>
<table>
<thead>
<tr>
<th>版本号</th>
<th>修订人</th>
<th>修订日期</th>
<th>修订描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.0</td>
<td>衡先焘</td>
<td>2022.4.12</td>
<td></td>
</tr>
<tr>
<td>3.0</td>
<td>衡先焘、俞琼瑶、徐柳</td>
<td>2022.4.16</td>
<td>重新设计UI，代码重构</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>[TOC]</p>
<h2 id="1-概要说明">1.概要说明</h2>
<h3 id="1-1背景">1.1背景</h3>
<p>卓音工作室是隶属于东北师范大学就业中心的工作室。卓音工作室成立于2003年，在2015年以前，工作室成员均为研究生，2015年至今，工作室成员均为本科生。但无论是以前还是现在，每一代人员的更替，都未留下延续性的，保留组织文化的，能供组织内部人员使用的app或官网。基于此背景，本项目组计划开发一个官方软件，供卓音工作室内部人员使用，以方便工作室工作的开展与工作室组织文化的传承。</p>
<h3 id="1-2目标">1.2目标</h3>
<p>实现内部人员使用的基本功能，如了解工作室的动态，通过编写博客完成讨论班的预习，技术的记录与巩固，同时方便工作室内部的互相交流学习，以及打卡学习的功能。将多个常用功能结合与一个软件，方便工作室成员的使用。</p>
<h2 id="2-用户角色描述">2.用户角色描述</h2>
<table>
<thead>
<tr>
<th>用户角色</th>
<th>用户描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>普通用户</td>
<td>卓音内部成员</td>
</tr>
<tr>
<td>管理员</td>
<td>具有配置其他用户权限、新增系统用户的能力</td>
</tr>
</tbody>
</table>
<h2 id="3-产品构架">3.产品构架</h2>
<p>3.1产品信息结构图</p>
<h3 id="img-src-卓音打卡开发文档-clip-image002-16506819328562-png-alt-img"><img src="/2022/04/23/%E5%8D%93%E9%9F%B3%E6%89%93%E5%8D%A1%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/clip_image002-16506819328562.png" alt="img"></h3>
<h3 id="3-2业务流程图、时序图">3.2业务流程图、时序图</h3>
<p>3.2.1 按照人员操作</p>
<h4 id="img-src-卓音打卡开发文档-clip-image002-16506819644343-png-alt-img"><img src="/2022/04/23/%E5%8D%93%E9%9F%B3%E6%89%93%E5%8D%A1%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/clip_image002-16506819644343.png" alt="img"></h4>
<h4 id="3-2-2按照代码执行程度">3.2.2按照代码执行程度</h4>
<h3 id="3-3产品原型图">3.3产品原型图</h3>
<table>
<thead>
<tr>
<th><img src="/2022/04/23/%E5%8D%93%E9%9F%B3%E6%89%93%E5%8D%A1%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/image-20220423105436745.png" alt="image-20220423105436745"></th>
<th><img src="/2022/04/23/%E5%8D%93%E9%9F%B3%E6%89%93%E5%8D%A1%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/image-20220423105442762.png" alt="image-20220423105442762"></th>
<th><img src="/2022/04/23/%E5%8D%93%E9%9F%B3%E6%89%93%E5%8D%A1%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/image-20220423105448765.png" alt="image-20220423105448765"></th>
</tr>
</thead>
<tbody>
<tr>
<td>进入页面</td>
<td>主页</td>
<td>博客页面</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><img src="/2022/04/23/%E5%8D%93%E9%9F%B3%E6%89%93%E5%8D%A1%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/image-20220423105912547.png" alt="image-20220423105912547"></th>
<th><img src="/2022/04/23/%E5%8D%93%E9%9F%B3%E6%89%93%E5%8D%A1%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/image-20220423105919676.png" alt="image-20220423105919676"></th>
<th><img src="/2022/04/23/%E5%8D%93%E9%9F%B3%E6%89%93%E5%8D%A1%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/image-20220423105925847.png" alt="image-20220423105925847"></th>
<th><img src="/2022/04/23/%E5%8D%93%E9%9F%B3%E6%89%93%E5%8D%A1%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/image-20220423110225767.png" alt="image-20220423110225767"></th>
</tr>
</thead>
<tbody>
<tr>
<td>点击打卡</td>
<td>结束打卡</td>
<td>查看排行榜</td>
<td>我的页面</td>
</tr>
</tbody>
</table>
<h2 id="4-表结构及关系">4.表结构及关系</h2>
<br>
<table>
<thead>
<tr>
<th>items</th>
<th>类型</th>
<th>长度</th>
<th>是否可为null</th>
<th>主键</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>int</td>
<td>11</td>
<td>否</td>
<td>是</td>
<td>id</td>
</tr>
<tr>
<td>image_res</td>
<td>int</td>
<td>11</td>
<td>是</td>
<td></td>
<td>本地资源</td>
</tr>
<tr>
<td>image_url</td>
<td>varchar</td>
<td>255</td>
<td>否</td>
<td></td>
<td>资源链接</td>
</tr>
<tr>
<td>title</td>
<td>longtext</td>
<td>0</td>
<td>否</td>
<td></td>
<td>咨询内容</td>
</tr>
<tr>
<td>view_type</td>
<td>int</td>
<td>11</td>
<td>否</td>
<td></td>
<td>资源类型</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>notice</th>
<th>类型</th>
<th>长度</th>
<th>是否可为null</th>
<th>主键</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>id</td>
<td>11</td>
<td>否</td>
<td>是</td>
<td>id</td>
</tr>
<tr>
<td>title</td>
<td>varchar</td>
<td>255</td>
<td>否</td>
<td></td>
<td>公告标题</td>
</tr>
<tr>
<td>content</td>
<td>longtext</td>
<td>0</td>
<td>否</td>
<td></td>
<td>公告内容</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>role</th>
<th>类型</th>
<th>长度</th>
<th>是否可为null</th>
<th>主键</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>int</td>
<td>11</td>
<td>否</td>
<td>是</td>
<td>id</td>
</tr>
<tr>
<td>role_name</td>
<td>varchar</td>
<td>255</td>
<td>否</td>
<td></td>
<td>角色名称</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>sign_in_record</th>
<th>类型</th>
<th>长度</th>
<th>是否可为null</th>
<th>主键</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>bigint</td>
<td>20</td>
<td>否</td>
<td>是</td>
<td>id</td>
</tr>
<tr>
<td>user_id</td>
<td>int</td>
<td>11</td>
<td>否</td>
<td></td>
<td>用户id</td>
</tr>
<tr>
<td>sign_in_time</td>
<td>datetime</td>
<td>0</td>
<td>否</td>
<td></td>
<td>签到时间</td>
</tr>
<tr>
<td>sign_out_time</td>
<td>datetime</td>
<td>0</td>
<td>是</td>
<td></td>
<td>签退时间</td>
</tr>
<tr>
<td>check_in_time</td>
<td>bigint</td>
<td>20</td>
<td>否</td>
<td></td>
<td>签到时长</td>
</tr>
<tr>
<td>sign_in _address</td>
<td>varchar</td>
<td>255</td>
<td>是</td>
<td></td>
<td>签到地址</td>
</tr>
<tr>
<td>sign_in_ip</td>
<td>varchar</td>
<td>255</td>
<td>是</td>
<td></td>
<td>签到IP</td>
</tr>
<tr>
<td>status</td>
<td>int</td>
<td>11</td>
<td>否</td>
<td></td>
<td>记录状态（有效为1）</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>user</th>
<th>类型</th>
<th>长度</th>
<th>是否可为null</th>
<th>主键</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>int</td>
<td>11</td>
<td>否</td>
<td>是</td>
<td>id</td>
</tr>
<tr>
<td>user_account</td>
<td>varchar</td>
<td>255</td>
<td>否</td>
<td></td>
<td>用户学号</td>
</tr>
<tr>
<td>username</td>
<td>varchar</td>
<td>255</td>
<td>否</td>
<td></td>
<td>用户名</td>
</tr>
<tr>
<td>password</td>
<td>varchar</td>
<td>255</td>
<td>否</td>
<td></td>
<td>密码</td>
</tr>
<tr>
<td>day_duration</td>
<td>bigint</td>
<td>20</td>
<td>否</td>
<td></td>
<td>日签到时长</td>
</tr>
<tr>
<td>week_duration</td>
<td>bigint</td>
<td>20</td>
<td>否</td>
<td></td>
<td>周签到时长</td>
</tr>
<tr>
<td>total_duration</td>
<td>bigint</td>
<td>20</td>
<td>否</td>
<td></td>
<td>总签到时长</td>
</tr>
<tr>
<td>avatar</td>
<td>longtext</td>
<td>0</td>
<td>否</td>
<td></td>
<td>头像链接</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>user_role</th>
<th>类型</th>
<th>长度</th>
<th>是否可为null</th>
<th>主键</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>int</td>
<td>11</td>
<td>否</td>
<td>是</td>
<td>id</td>
</tr>
<tr>
<td>user_id</td>
<td>int</td>
<td>11</td>
<td>否</td>
<td></td>
<td>用户id</td>
</tr>
<tr>
<td>role_id</td>
<td>int</td>
<td>11</td>
<td>否</td>
<td></td>
<td>角色id</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>files</th>
<th>类型</th>
<th>长度</th>
<th>是否可为null</th>
<th>主键</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>int</td>
<td>11</td>
<td>否</td>
<td>是</td>
<td>id</td>
</tr>
<tr>
<td>file_name</td>
<td>varchar</td>
<td>255</td>
<td>否</td>
<td></td>
<td>文件名</td>
</tr>
<tr>
<td>path</td>
<td>varchar</td>
<td>255</td>
<td>否</td>
<td></td>
<td>文件url</td>
</tr>
<tr>
<td>tags</td>
<td>int</td>
<td>11</td>
<td>否</td>
<td></td>
<td>内推的用户id</td>
</tr>
</tbody>
</table>
<h2 id="5-接口约定">5.接口约定</h2>
<h4 id="一、登录（token）post">一、登录（token）post</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/punch/user/login</span><br></pre></td></tr></table></figure>
<h5 id="参数：">参数：</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;username&quot;:&quot;yqy&quot;,</span><br><span class="line">    &quot;userAccount&quot;:&quot;2020012411&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="返回值：">返回值：</h5>
<ol>
<li class="lvl-3">
<p>登录成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;eyJhbGciOiJIUzI1NiIsInppcCI6IkRFRiJ9.eNoszksKwzAMBNC7aB2DJduym12P4thapND0ExsaSu4etWQleMMw-sLaJxhhe20wQF_lfS3l0ZemRpasRfKIGs0VRhxAPk-9HJCSjcmr5_YHyzFcfnBrs3Ynn6MwBuN8EeOpFpOYsqmILjgm4ZTOwSXf5fxgPwAAAP__.bI9Nye0L4ODDIcrwsWAMgXid66n1TgeoM0uSVDI7-5g&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>用户不存在（用户名或密码错误）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 404,</span><br><span class="line">    &quot;msg&quot;: &quot;请求的资源不存在&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;用户不存在&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="二、获取userDetails-post">二、获取userDetails post</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/punch/user/getDetails</span><br></pre></td></tr></table></figure>
<h5 id="返回值：-2">返回值：</h5>
<ol>
<li class="lvl-3">
<p>成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;id&quot;: 1,</span><br><span class="line">        &quot;userAccount&quot;: &quot;2020012411&quot;,</span><br><span class="line">        &quot;username&quot;: &quot;yqy&quot;,</span><br><span class="line">        &quot;password&quot;: &quot;$2a$10$E5m7j0XHsoWDLIEdgj4BIeQGBZCiq9RJKl/FXJfpCbB9gMUfnVG92&quot;,</span><br><span class="line">        &quot;dayDuration&quot;: 0,</span><br><span class="line">        &quot;weekDuration&quot;: 16371,</span><br><span class="line">        &quot;totalDuration&quot;: 16371,</span><br><span class="line">        &quot;avatar&quot;: &quot;https://tse1-mm.cn.bing.net/th/id/R-C.aed3df7a8a3a793f26c98696083a8c9b?rik=LPhJmBwklM7qsw&amp;riu=http%3a%2f%2fimg.zcool.cn%2fcommunity%2f019e0d58b588a5a801219c77fe5980.jpg%401280w_1l_2o_100sh.jpg&amp;ehk=21ifJI9BGA8XQZlQF3v2L1eufChYtfkswi7AH%2bRyLaA%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0&quot;,</span><br><span class="line">        &quot;role&quot;: &quot;ROLE_admin&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>不成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 404,</span><br><span class="line">    &quot;msg&quot;: &quot;请求的资源不存在&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="三、签到-post">三、签到 post</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/punch/record/in</span><br></pre></td></tr></table></figure>
<h5 id="参数：token">参数：token</h5>
<p>header里，token值前需要加上&quot;Bearer &quot;(带一个空格)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;Authorization&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiIsInppcCI6IkRFRiJ9.eNoszd0KAiEQQOF3mesVxr8xvetRbBzBoC1ahY3o3TO22w8O5w3buECCV4MFxibPM_N9rH2SQYNoJrcCySwg-wOSJo9kQzjR9NwPQGviD669zS7XUHVxpDjoolwRVpHJqWi192gzean_2Zpvcsw_XwAAAP__.yIjTOZpxmnrVUC16FiNaeJ4DV40gd-Ld_erkN8sLvXk&quot;</span><br></pre></td></tr></table></figure>
<h5 id="返回值">返回值</h5>
<ol>
<li class="lvl-3">
<p>签到成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;id&quot;: 1891012704,</span><br><span class="line">        &quot;userId&quot;: 1,</span><br><span class="line">        &quot;username&quot;: null,</span><br><span class="line">        &quot;signInTime&quot;: null,</span><br><span class="line">        &quot;signOutTime&quot;: null,</span><br><span class="line">        &quot;checkInTime&quot;: null,</span><br><span class="line">        &quot;signInAddress&quot;: null,</span><br><span class="line">        &quot;signInIp&quot;: null,</span><br><span class="line">        &quot;status&quot;: 1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>已签到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 600,</span><br><span class="line">    &quot;msg&quot;: &quot;已签到&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;id&quot;: 1891012705,</span><br><span class="line">        &quot;userId&quot;: 1,</span><br><span class="line">        &quot;username&quot;: null,</span><br><span class="line">        &quot;signInTime&quot;: &quot;2022-04-23 09:15:18&quot;,</span><br><span class="line">        &quot;signOutTime&quot;: null,</span><br><span class="line">        &quot;checkInTime&quot;: 0,</span><br><span class="line">        &quot;signInAddress&quot;: null,</span><br><span class="line">        &quot;signInIp&quot;: null,</span><br><span class="line">        &quot;status&quot;: 1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>未在签到时间</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 405,</span><br><span class="line">    &quot;msg&quot;: &quot;签到失败&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;不在签到时间&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="四、签退-post">四、签退 post</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/punch/record/out</span><br></pre></td></tr></table></figure>
<h5 id="参数">参数</h5>
<p>header里，token值前需要加上&quot;Bearer &quot;(带一个空格)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;Authorization&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiIsInppcCI6IkRFRiJ9.eNoszd0KAiEQQOF3mesVxr8xvetRbBzBoC1ahY3o3TO22w8O5w3buECCV4MFxibPM_N9rH2SQYNoJrcCySwg-wOSJo9kQzjR9NwPQGviD669zS7XUHVxpDjoolwRVpHJqWi192gzean_2Zpvcsw_XwAAAP__.yIjTOZpxmnrVUC16FiNaeJ4DV40gd-Ld_erkN8sLvXk&quot;</span><br></pre></td></tr></table></figure>
<h5 id="返回值：-3">返回值：</h5>
<ol>
<li class="lvl-3">
<p>签退成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;SUCCESS&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>未签到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 406,</span><br><span class="line">    &quot;msg&quot;: &quot;签退失败&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;未签到&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>未在签退时间</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 406,</span><br><span class="line">    &quot;msg&quot;: &quot;签退失败&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;不在签退时间&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="五、检查签到状态-post">五、检查签到状态 post</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/punch/record/check</span><br></pre></td></tr></table></figure>
<h5 id="返回值：-4">返回值：</h5>
<ol>
<li class="lvl-3">
<p>已签到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;id&quot;: 1891012706,</span><br><span class="line">        &quot;userId&quot;: 1,</span><br><span class="line">        &quot;username&quot;: null,</span><br><span class="line">        &quot;signInTime&quot;: &quot;2022-04-23 09:22:17&quot;,</span><br><span class="line">        &quot;signOutTime&quot;: null,</span><br><span class="line">        &quot;checkInTime&quot;: 0,</span><br><span class="line">        &quot;signInAddress&quot;: null,</span><br><span class="line">        &quot;signInIp&quot;: null,</span><br><span class="line">        &quot;status&quot;: 1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>未签到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 404,</span><br><span class="line">    &quot;msg&quot;: &quot;请求的资源不存在&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;未签到&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="六、每日-每周-总排行榜-post-get">六、每日\每周\总排行榜 post / get</h4>
<p>无需登录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">日：/punch/user/day</span><br><span class="line">周：/punch/user/week</span><br><span class="line">总：/punch/user/total</span><br></pre></td></tr></table></figure>
<h5 id="返回值-2">返回值:</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: 1,</span><br><span class="line">            &quot;userAccount&quot;: &quot;2020012411&quot;,</span><br><span class="line">            &quot;username&quot;: &quot;yqy&quot;,</span><br><span class="line">            &quot;password&quot;: &quot;$2a$10$E5m7j0XHsoWDLIEdgj4BIeQGBZCiq9RJKl/FXJfpCbB9gMUfnVG92&quot;,</span><br><span class="line">            &quot;dayDuration&quot;: 382,</span><br><span class="line">            &quot;weekDuration&quot;: 16753,</span><br><span class="line">            &quot;totalDuration&quot;: 16753,</span><br><span class="line">            &quot;avatar&quot;: &quot;https://tse1-mm.cn.bing.net/th/id/R-C.aed3df7a8a3a793f26c98696083a8c9b?rik=LPhJmBwklM7qsw&amp;riu=http%3a%2f%2fimg.zcool.cn%2fcommunity%2f019e0d58b588a5a801219c77fe5980.jpg%401280w_1l_2o_100sh.jpg&amp;ehk=21ifJI9BGA8XQZlQF3v2L1eufChYtfkswi7AH%2bRyLaA%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0&quot;,</span><br><span class="line">            &quot;role&quot;: null</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: 4,</span><br><span class="line">            &quot;userAccount&quot;: &quot;2020010001&quot;,</span><br><span class="line">            &quot;username&quot;: &quot;test&quot;,</span><br><span class="line">            &quot;password&quot;: &quot;$2a$10$E5m7j0XHsoWDLIEdgj4BIeQGBZCiq9RJKl/FXJfpCbB9gMUfnVG92&quot;,</span><br><span class="line">            &quot;dayDuration&quot;: 349,</span><br><span class="line">            &quot;weekDuration&quot;: 3016,</span><br><span class="line">            &quot;totalDuration&quot;: 3016,</span><br><span class="line">            &quot;avatar&quot;: &quot;https://bkimg.cdn.bcebos.com/pic/a8ec8a13632762d0f703e96f3bbc1ffa513d27976898?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2U4MA==,g_7,xp_5,yp_5/format,f_auto&quot;,</span><br><span class="line">            &quot;role&quot;: null</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: 3,</span><br><span class="line">            &quot;userAccount&quot;: &quot;2020010661&quot;,</span><br><span class="line">            &quot;username&quot;: &quot;hxt&quot;,</span><br><span class="line">            &quot;password&quot;: &quot;$2a$10$E5m7j0XHsoWDLIEdgj4BIeQGBZCiq9RJKl/FXJfpCbB9gMUfnVG92&quot;,</span><br><span class="line">            &quot;dayDuration&quot;: 86,</span><br><span class="line">            &quot;weekDuration&quot;: 3518,</span><br><span class="line">            &quot;totalDuration&quot;: 3518,</span><br><span class="line">            &quot;avatar&quot;: &quot;https://profile-avatar.csdnimg.cn/624a1a802cf14e1ba76b2ed25ea7525b_jun_tong.jpg!3&quot;,</span><br><span class="line">            &quot;role&quot;: null</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: 2,</span><br><span class="line">            &quot;userAccount&quot;: &quot;2020011765&quot;,</span><br><span class="line">            &quot;username&quot;: &quot;yangy&quot;,</span><br><span class="line">            &quot;password&quot;: &quot;$2a$10$E5m7j0XHsoWDLIEdgj4BIeQGBZCiq9RJKl/FXJfpCbB9gMUfnVG92&quot;,</span><br><span class="line">            &quot;dayDuration&quot;: 0,</span><br><span class="line">            &quot;weekDuration&quot;: 79,</span><br><span class="line">            &quot;totalDuration&quot;: 1846,</span><br><span class="line">            &quot;avatar&quot;: &quot;https://bkimg.cdn.bcebos.com/pic/a8ec8a13632762d0f703e96f3bbc1ffa513d27976898?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2U4MA==,g_7,xp_5,yp_5/format,f_auto&quot;,</span><br><span class="line">            &quot;role&quot;: null</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="七、获取排行榜前三-post-get">七、获取排行榜前三 post/get</h4>
<p>无需登录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/punch/user/dayTop</span><br><span class="line">/punch/user/weekTop</span><br><span class="line">/punch/user/totalTop</span><br></pre></td></tr></table></figure>
<h5 id="返回值：-5">返回值：</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: 1,</span><br><span class="line">            &quot;userAccount&quot;: &quot;2020012411&quot;,</span><br><span class="line">            &quot;username&quot;: &quot;yqy&quot;,</span><br><span class="line">            &quot;password&quot;: &quot;$2a$10$E5m7j0XHsoWDLIEdgj4BIeQGBZCiq9RJKl/FXJfpCbB9gMUfnVG92&quot;,</span><br><span class="line">            &quot;dayDuration&quot;: 382,</span><br><span class="line">            &quot;weekDuration&quot;: 16753,</span><br><span class="line">            &quot;totalDuration&quot;: 16753,</span><br><span class="line">            &quot;avatar&quot;: &quot;https://tse1-mm.cn.bing.net/th/id/R-C.aed3df7a8a3a793f26c98696083a8c9b?rik=LPhJmBwklM7qsw&amp;riu=http%3a%2f%2fimg.zcool.cn%2fcommunity%2f019e0d58b588a5a801219c77fe5980.jpg%401280w_1l_2o_100sh.jpg&amp;ehk=21ifJI9BGA8XQZlQF3v2L1eufChYtfkswi7AH%2bRyLaA%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0&quot;,</span><br><span class="line">            &quot;role&quot;: null</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: 3,</span><br><span class="line">            &quot;userAccount&quot;: &quot;2020010661&quot;,</span><br><span class="line">            &quot;username&quot;: &quot;hxt&quot;,</span><br><span class="line">            &quot;password&quot;: &quot;$2a$10$E5m7j0XHsoWDLIEdgj4BIeQGBZCiq9RJKl/FXJfpCbB9gMUfnVG92&quot;,</span><br><span class="line">            &quot;dayDuration&quot;: 86,</span><br><span class="line">            &quot;weekDuration&quot;: 3518,</span><br><span class="line">            &quot;totalDuration&quot;: 3518,</span><br><span class="line">            &quot;avatar&quot;: &quot;https://profile-avatar.csdnimg.cn/624a1a802cf14e1ba76b2ed25ea7525b_jun_tong.jpg!3&quot;,</span><br><span class="line">            &quot;role&quot;: null</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: 4,</span><br><span class="line">            &quot;userAccount&quot;: &quot;2020010001&quot;,</span><br><span class="line">            &quot;username&quot;: &quot;test&quot;,</span><br><span class="line">            &quot;password&quot;: &quot;$2a$10$E5m7j0XHsoWDLIEdgj4BIeQGBZCiq9RJKl/FXJfpCbB9gMUfnVG92&quot;,</span><br><span class="line">            &quot;dayDuration&quot;: 349,</span><br><span class="line">            &quot;weekDuration&quot;: 3016,</span><br><span class="line">            &quot;totalDuration&quot;: 3016,</span><br><span class="line">            &quot;avatar&quot;: &quot;https://bkimg.cdn.bcebos.com/pic/a8ec8a13632762d0f703e96f3bbc1ffa513d27976898?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2U4MA==,g_7,xp_5,yp_5/format,f_auto&quot;,</span><br><span class="line">            &quot;role&quot;: null</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="八、获取正在打卡的人数-post">八、获取正在打卡的人数 post</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/punch/record/already</span><br></pre></td></tr></table></figure>
<h5 id="返回值：-6">返回值：</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="九、获取公告-get">九、获取公告  get</h4>
<p>无需登录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/punch/notice/get</span><br></pre></td></tr></table></figure>
<h5 id="返回值：-7">返回值：</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;id&quot;: 1,</span><br><span class="line">        &quot;title&quot;: &quot;不会改动title&quot;,</span><br><span class="line">        &quot;content&quot;: &quot;one two three four five ,\nfive four three two one.\n12345,54321!\n一二三四五，上山打老虎！&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="十、修改公告（管理员权限）post">十、修改公告（管理员权限）post</h4>
<p>需要登录，给token验证权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/punch/notice/update</span><br></pre></td></tr></table></figure>
<h5 id="参数：-2">参数：</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;title&quot;:&quot;改一改&quot;,</span><br><span class="line">    &quot;content&quot;:&quot;一二三四五，上山打老虎。&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="返回值：-8">返回值：</h5>
<ol>
<li class="lvl-3">
<p>成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;id&quot;: 1,</span><br><span class="line">        &quot;title&quot;: &quot;改一改&quot;,</span><br><span class="line">        &quot;content&quot;: &quot;一二三四五，上山打老虎。&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>失败</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 601,</span><br><span class="line">    &quot;msg&quot;: &quot;公告操作失败&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;更新失败&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>无权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 601,</span><br><span class="line">    &quot;msg&quot;: &quot;公告操作失败&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;无权限&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="（失败、无权限的返回值统一）">（失败、无权限的返回值统一）</h5>
<h4 id="十一、展示事项-get">十一、展示事项 get</h4>
<p>无需登录，get/post均可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/punch/items/showItems</span><br></pre></td></tr></table></figure>
<h5 id="返回值：-9">返回值：</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: -1846087678,</span><br><span class="line">            &quot;fakeId&quot;: null,</span><br><span class="line">            &quot;imageRes&quot;: null,</span><br><span class="line">            &quot;imageUrl&quot;: &quot;https://tse4-mm.cn.bing.net/th/id/OIP-C.QkUuhZP1IhrPzQQBufM-sQHaHY?pid=ImgDet&amp;rs=1&quot;,</span><br><span class="line">            &quot;title&quot;: &quot;呲牙mmmm&quot;,</span><br><span class="line">            &quot;viewType&quot;: 4</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: 1,</span><br><span class="line">            &quot;fakeId&quot;: null,</span><br><span class="line">            &quot;imageRes&quot;: null,</span><br><span class="line">            &quot;imageUrl&quot;: &quot;https://pic1.zhimg.com/v2-dd52955ee2b5a66ec914fc204e64bc1a_r.jpg?source=1940ef5c&quot;,</span><br><span class="line">            &quot;title&quot;: &quot;逐梦学术圈\nhahhahahhha&quot;,</span><br><span class="line">            &quot;viewType&quot;: 4</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: 2,</span><br><span class="line">            &quot;fakeId&quot;: null,</span><br><span class="line">            &quot;imageRes&quot;: null,</span><br><span class="line">            &quot;imageUrl&quot;: &quot;https://img.zcool.cn/community/015a7358e6096da8012049ef6787f8.jpg@1280w_1l_2o_100sh.jpg&quot;,</span><br><span class="line">            &quot;title&quot;: &quot;夜晚工作&quot;,</span><br><span class="line">            &quot;viewType&quot;: 4</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: 3,</span><br><span class="line">            &quot;fakeId&quot;: null,</span><br><span class="line">            &quot;imageRes&quot;: null,</span><br><span class="line">            &quot;imageUrl&quot;: &quot;https://tse1-mm.cn.bing.net/th/id/R-C.2a85bb58a3c81a251221ef60c5b24780?rik=ScpyiqGiKhBMxw&amp;riu=http%3a%2f%2fpic.962.net%2fup%2f2017-7%2f14994244478424116.jpg&amp;ehk=mS1xiJOkpiVKJa3tR9St97lcS5aIEZS9d8t0RvtQWOc%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0&quot;,</span><br><span class="line">            &quot;title&quot;: &quot;乾坤大挪移&quot;,</span><br><span class="line">            &quot;viewType&quot;: 4</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="十二、添加事项（管理员权限）post">十二、添加事项（管理员权限）post</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/punch/items/addItems</span><br></pre></td></tr></table></figure>
<h5 id="参数：-3">参数：</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;imageUrl&quot;: &quot;https://tse4-mm.cn.bing.net/th/id/OIP-C.QkUuhZP1IhrPzQQBufM-sQHaHY?pid=ImgDet&amp;rs=1&quot;,</span><br><span class="line">    &quot;title&quot;: &quot;呲牙&quot;,</span><br><span class="line">    &quot;viewType&quot;: 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="返回值：-10">返回值：</h5>
<ol>
<li class="lvl-3">
<p>成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;id&quot;: -21581822,</span><br><span class="line">        &quot;imageRes&quot;: null,</span><br><span class="line">        &quot;imageUrl&quot;: &quot;https://tse4-mm.cn.bing.net/th/id/OIP-C.QkUuhZP1IhrPzQQBufM-sQHaHY?pid=ImgDet&amp;rs=1&quot;,</span><br><span class="line">        &quot;title&quot;: &quot;呲牙mmmm&quot;,</span><br><span class="line">        &quot;viewType&quot;: 1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>失败</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 602,</span><br><span class="line">    &quot;msg&quot;: &quot;事项操作失败&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>无权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 602,</span><br><span class="line">    &quot;msg&quot;: &quot;事项操作失败&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;无权限&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="十三、修改事项（管理员权限）post">十三、修改事项（管理员权限）post</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/punch/items/updateItems</span><br></pre></td></tr></table></figure>
<h5 id="参数：-4">参数：</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;   </span><br><span class="line">    &quot;fakeId&quot;:&quot;-1007259646&quot;,</span><br><span class="line">    &quot;imageUrl&quot;:&quot;https://tse4-mm.cn.bing.net/th/id/OIP-C.QkUuhZP1IhrPzQQBufM-sQHaHY?pid=ImgDet&amp;rs=1&quot;,</span><br><span class="line">    &quot;title&quot;:&quot;呲牙mmmm&quot;,</span><br><span class="line">    &quot;viewType&quot;:1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="返回值：-11">返回值：</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;id&quot;: -1007259646,</span><br><span class="line">        &quot;fakeId&quot;: &quot;-1007259646&quot;,</span><br><span class="line">        &quot;imageRes&quot;: null,</span><br><span class="line">        &quot;imageUrl&quot;: &quot;https://tse4-mm.cn.bing.net/th/id/OIP-C.QkUuhZP1IhrPzQQBufM-sQHaHY?pid=ImgDet&amp;rs=1&quot;,</span><br><span class="line">        &quot;title&quot;: &quot;呲牙mmmm&quot;,</span><br><span class="line">        &quot;viewType&quot;: 1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="十四、删除事项-（管理员权限）post">十四、删除事项 （管理员权限）post</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/punch/items/deleteItems</span><br></pre></td></tr></table></figure>
<h5 id="参数：-5">参数：</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;  </span><br><span class="line">    &quot;fakeId&quot;: &quot;-1007259646&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="返回值：-12">返回值：</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="十五、修改头像-post">十五、修改头像 post</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/punch/user/avatar</span><br></pre></td></tr></table></figure>
<h5 id="参数：-6">参数：</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;avatar&quot;:&quot;https://tse1-mm.cn.bing.net/th/id/R-C.aed3df7a8a3a793f26c98696083a8c9b?rik=LPhJmBwklM7qsw&amp;riu=http%3a%2f%2fimg.zcool.cn%2fcommunity%2f019e0d58b588a5a801219c77fe5980.jpg%401280w_1l_2o_100sh.jpg&amp;ehk=21ifJI9BGA8XQZlQF3v2L1eufChYtfkswi7AH%2bRyLaA%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="返回值：-13">返回值：</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;id&quot;: 1,</span><br><span class="line">        &quot;userAccount&quot;: &quot;2020010001&quot;,</span><br><span class="line">        &quot;username&quot;: &quot;test&quot;,</span><br><span class="line">        &quot;password&quot;: &quot;$2a$10$E5m7j0XHsoWDLIEdgj4BIeQGBZCiq9RJKl/FXJfpCbB9gMUfnVG92&quot;,</span><br><span class="line">        &quot;dayDuration&quot;: 0,</span><br><span class="line">        &quot;weekDuration&quot;: 16266,</span><br><span class="line">        &quot;totalDuration&quot;: 16266,</span><br><span class="line">        &quot;avatar&quot;: &quot;https://tse1-mm.cn.bing.net/th/id/R-C.aed3df7a8a3a793f26c98696083a8c9b?rik=LPhJmBwklM7qsw&amp;riu=http%3a%2f%2fimg.zcool.cn%2fcommunity%2f019e0d58b588a5a801219c77fe5980.jpg%401280w_1l_2o_100sh.jpg&amp;ehk=21ifJI9BGA8XQZlQF3v2L1eufChYtfkswi7AH%2bRyLaA%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0&quot;,</span><br><span class="line">        &quot;role&quot;: &quot;ROLE_user&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="十六、上传内推文件-post">十六、上传内推文件 post</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/punch/files/upload</span><br></pre></td></tr></table></figure>
<h5 id="参数：需要登录，上传文件-files">参数：需要登录，上传文件 files</h5>
<h5 id="返回值：-14">返回值：</h5>
<ol>
<li class="lvl-3">
<p>上传成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 200,</span><br><span class="line">    &quot;msg&quot;: &quot;成功&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;http://127.0.0.1:8090//files/21bc8070559f44ad8d677e297e0bf755.docx&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>文件为空</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 603,</span><br><span class="line">    &quot;msg&quot;: &quot;文件上传失败&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;请上传文件&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>上传失败</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	&quot;code&quot;:603,</span><br><span class="line">	&quot;msg&quot;:&quot;文件上传失败&quot;,</span><br><span class="line">	&quot;data&quot;:&quot;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="6-开发过程">6.开发过程</h2>
<h2 id="7-附录">7.附录</h2>
<h3 id="7-1开发时间安排">7.1开发时间安排</h3>
<p>4月23日</p>
<h3 id="7-2参考文献">7.2参考文献</h3>
]]></content>
      <categories>
        <category>开发文档</category>
      </categories>
      <tags>
        <tag>join</tag>
      </tags>
  </entry>
  <entry>
    <title>单一职责原则SRP</title>
    <url>/2022/06/21/%E5%8D%95%E4%B8%80%E8%81%8C%E8%B4%A3%E5%8E%9F%E5%88%99SRP/</url>
    <content><![CDATA[<p>本文是阅读 架构整洁之道2018 (（美）Robert C. Martin（罗伯特 C. 马丁）) (<a class="link" href="http://z-lib.org">z-lib.org<i class="fas fa-external-link-alt"></i></a>) 之后的总结。（侵删）</p>
<p><a class="link" href="https://en.wikipedia.org/wiki/SOLID">SOLID - Wikipedia<i class="fas fa-external-link-alt"></i></a></p>
<h2 id="一、单一职责原则（SRP）">一、单一职责原则（SRP）</h2>
<h3 id="定义概念">定义概念</h3>
<p>在历史上，曾经这样描述SRP： 任何一个软件模块都应该有且仅有一个被修改的原因。</p>
<p>我们也可以这样描述SRP： 任何一个软件模块都应该只对一个用户（User）或系统利益相关 者（Stakeholder）负责。</p>
<p>SRP的最终描述就变成了： 任何一个软件模块都应该只对某一类行为者负责。</p>
<h3 id="举例">举例</h3>
<p>某个工资管理程序中的Employee类 有三个函数calculatePay（）、reportHours（）和save（）</p>
<img src="/2022/06/21/%E5%8D%95%E4%B8%80%E8%81%8C%E8%B4%A3%E5%8E%9F%E5%88%99SRP/image-20220621101754019.png" alt="image-20220621101754019">
<p>如你所见，这个类的三个函数分别对应的是三类非常不同的行为 者，违反了SRP设计原则。 calculatePay（）函数是由财务部门制定的，他们负责向CFO汇 报。 reportHours（）函数是由人力资源部门制定并使用的，他们负责 向COO汇报。 save（）函数是由DBA制定的，他们负责向CTO汇报。 这三个函数被放在同一个源代码文件，即同一个Employee类中， 程序员这样做实际上就等于使三类行为者的行为耦合在了一起，这有 可能会导致CFO团队的命令影响到COO团队所依赖的功能。</p>
<p>在上面例子的基础上修改</p>
<p>calculatePay（）函数和reportHours（）函数使用同样的 逻辑来计算正常工作时数。程序员为了避免重复编码，通常会将该算 法单独实现为一个名为regularHours（）的函数</p>
<img src="/2022/06/21/%E5%8D%95%E4%B8%80%E8%81%8C%E8%B4%A3%E5%8E%9F%E5%88%99SRP/image-20220621101848160.png" alt="image-20220621101848160">
<p>接下来，假设CFO团队需要修改正常工作时数的计算方法，而COO 带领的HR团队不需要这个修改，因为他们对数据的用法是不同的。 这时候，负责这项修改的程序员会注意到 calculatePay（）函数 调用了regularHours（）函数，但可能不会注意到该函数会同时被 reportHours（）调用。 于是，该程序员就这样按照要求进行了修改，同时CFO团队的成员 验证了新算法工作正常。这项修改最终被成功部署上线了。 但是，COO 团队显然完全不知道这些事情的发生，HR 仍然在使用 reportHours（）产生的报表，随后就会发现他们的数据出错了！最终 这个问题让COO十分愤怒，因为这些错误的数据给公司造成了几百万美 元的损失。</p>
<h3 id="反面事例：代码合并">反面事例：代码合并</h3>
<p>例如，CTO团队的DBA决定要对Employee数据库表结构进行简单修 改。与此同时，COO团队的HR需要修改工作时数报表的格式。 这样一来，就很可能出现两个来自不同团队的程序员分别对 Employee类进行修改的情况。不出意外的话，他们各自的修改一定会 互相冲突，这就必须要进行代码合并。 在这个例子中，这次代码合并不仅有可能让CTO和COO要求的功能 出错，甚至连CFO原本正常的功能也可能受到影响。</p>
<p>在代码合并中，多人为了不同的目的修改了同一份源代码，这很容易造成问题的产生。而避免这种问题产生的方法就是将服务不同行为者的代码进行切分。</p>
<h3 id="解决方案">解决方案</h3>
<p>要想解决上面的问题，需要将相关的函数划分成不同的类。</p>
]]></content>
      <categories>
        <category>软件开发设计原则</category>
      </categories>
      <tags>
        <tag>设计</tag>
      </tags>
  </entry>
  <entry>
    <title>开闭原则OCP</title>
    <url>/2022/06/22/%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99OCP/</url>
    <content><![CDATA[<p>本文是阅读架构整洁之道2018 (（美）Robert C. Martin（罗伯特 C. 马丁）) (<a class="link" href="http://z-lib.org">z-lib.org<i class="fas fa-external-link-alt"></i></a>) 之后的整理。（侵删）</p>
<p><a class="link" href="https://en.wikipedia.org/wiki/SOLID">SOLID - Wikipedia<i class="fas fa-external-link-alt"></i></a></p>
<h2 id="二、开闭原则OCP">二、开闭原则OCP</h2>
<h3 id="定义概念-2">定义概念</h3>
<p>开闭原则（OCP）是Bertrand Meyer在1988年提出的，该设计原 则认为： 设计良好的计算机软件应该易于扩展，同时抗拒修改。</p>
<p>OCP是我们进行系统架构设计的主导原则，其主要目标是让系统易 于扩展，同时限制其每次被修改所影响的范围。实现方式是通过将系 统划分为一系列组件，并且将这些组件间的依赖关系按层次结构进行 组织，使得高阶组件不会因低阶组件被修改而受到影响。</p>
<h3 id="举例-2">举例</h3>
<p>假设我们现在要设计一个在Web页面上展示财务数据的系统，页面 上的数据要可以滚动显示，其中负值应显示为红色。 接下来，该系统的所有者又要求同样的数据需要形成一个报表， 该报表要能用黑白打印机打印，并且其报表格式要得到合理分页，每 页都要包含页头、页尾及栏目名。同时，负值应该以括号表示。 显然，我们需要增加一些代码来完成这个要求。但在这里我们更 关注的问题是，满足新的要求需要更改多少旧代码。</p>
<h3 id="img-src-开闭原则OCP-image-20220622180414498-png-alt-image-20220622180414498"><img src="/2022/06/22/%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99OCP/image-20220622180414498.png" alt="image-20220622180414498"></h3>
<p>我们可以先将满足不同需求的代码分组 （即SRP），然后再来调整这些分组之间的依赖关系（即DIP）。 利用SRP，我们可以按图中所展示的方式来处理数据流。即先 用一段分析程序处理原始的财务数据，以形成报表的数据结构，最后 再用两个不同的报表生成器来产生报表</p>
<p>这里的核心就是将应用生成报表的过程拆成两个不同的操作。即 先计算出报表数据，再生成具体的展示报表（分别以网页及纸质的形 式展示）。 接下来，我们就该修改其源代码之间的依赖关系了。这样做的目 的是保证其中一个操作被修改之后不会影响到另外一个操作。同时， 我们所构建的新的组织形式应该保证该程序后续在行为上的扩展都无 须修改现有代码。 在具体实现上，我们会将整个程序进程划分成一系列的类，然后 再将这些类分割成不同的组件。下面，我们用图8.2中的那些双线框来 具体描述一下整个实现。在这个图中，左上角的组件是Controller， 右上角是Interactor，右下角是Database，左下角则有四个组件分别 用于代表不同的Presenter和View。</p>
<img src="/2022/06/22/%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99OCP/image-20220622180542738.png" alt="image-20220622180542738">
<p>所以现在的情况是，我们不想让发生在Presenter上的修改影响到 Controller，也不想让发生在View上的修改影响到Presenter。而最关 键的是，我们不想让任何修改影响到Interactor。</p>
<img src="/2022/06/22/%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99OCP/image-20220622180745056.png" alt="image-20220622180745056">
]]></content>
      <categories>
        <category>软件开发设计原则</category>
      </categories>
      <tags>
        <tag>设计</tag>
      </tags>
  </entry>
  <entry>
    <title>回溯法解决最小重量机器设计问题</title>
    <url>/2022/05/15/%E5%9B%9E%E6%BA%AF%E6%B3%95%E8%A7%A3%E5%86%B3%E6%9C%80%E5%B0%8F%E9%87%8D%E9%87%8F%E6%9C%BA%E5%99%A8%E8%AE%BE%E8%AE%A1%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<br>
<h2 id="实验问题-4">实验问题</h2>
<h4 id="问题描述：">问题描述：</h4>
<p>设某一机器由n个部件组成，每一种部件都可以从m个不同的供应商处购得。设wij是从供应商j处够来的部件i的重量，cij是相应的价格。</p>
<p>试设计一个算法，给出总价格不超过c的最小重量机器设计。</p>
<h4 id="算法设计：">算法设计：</h4>
<p>对于给定的机器部件重量和机器部件价格，计算总价值不超过d的最小重量机器设计。</p>
<h4 id="数据输入：">数据输入：</h4>
<p>第一行由3个正整数n，m，d。接下来的2n行，每行m个数。前n行是c，后n行是w。</p>
<h4 id="结果输出：">结果输出：</h4>
<p>结果输出:将计算的最小重量及每个部件的供应商输出到文件 output.txt。</p>
<h5 id="数据输入示例：-输出示例：">数据输入示例：                        输出示例：</h5>
<p>3 3 4                                       4<br>
1 2 3                                       1 3 1<br>
3 2 1<br>
2 2 2<br>
1 2 3<br>
3 2 1<br>
2 2 2</p>
<br>
<h2 id="实验报告-4">实验报告</h2>
<h3 id="1️⃣方案-4">1️⃣方案</h3>
<p>题目给出了上限，总价格C。还要保证重量最优，所以这里定义两个变量cw，cp，分别表示重量和价格。</p>
<p>价格是上限，决定了是否有解，重量是一个约束，决定了解的最优性，所以再定义一个变量bsetw来表示最优解。</p>
<p>循环部件，从第一个开始选，选出一个生产改部件的厂商，如果价格大了就回溯，反之则继续找下一个部件。</p>
<img src="/2022/05/15/%E5%9B%9E%E6%BA%AF%E6%B3%95%E8%A7%A3%E5%86%B3%E6%9C%80%E5%B0%8F%E9%87%8D%E9%87%8F%E6%9C%BA%E5%99%A8%E8%AE%BE%E8%AE%A1%E9%97%AE%E9%A2%98/未命名绘图.drawio.png" alt="未命名绘图.drawio">
<br>
<h3 id="2️⃣完整代码">2️⃣完整代码</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> backtracking;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 11468</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Work53</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span>[][] price = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span>[][] weight = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line">    <span class="comment">// 记录所选取的部件提供厂商</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span>[] X = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span>[] X1 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> n, m, d;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">cw</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">cp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">bestw</span> <span class="operator">=</span> <span class="number">1000000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        n = scanner.nextInt();</span><br><span class="line">        m = scanner.nextInt();</span><br><span class="line">        d = scanner.nextInt();</span><br><span class="line">        Arrays.fill(X, <span class="number">0</span>);</span><br><span class="line">        Arrays.fill(X1, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            Arrays.fill(price[i], <span class="number">0</span>);</span><br><span class="line">            Arrays.fill(weight[i], <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                price[i][j] = scanner.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                weight[i][j] = scanner.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        machine(<span class="number">0</span>);</span><br><span class="line">        System.out.println(bestw);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            System.out.print(X1[i] + <span class="number">1</span> + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">machine</span><span class="params">(<span class="type">int</span> t)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (t &gt;= n) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cw &lt; bestw) &#123;</span><br><span class="line">                bestw = cw;</span><br><span class="line">                <span class="keyword">if</span> (n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    System.arraycopy(X, <span class="number">0</span>, X1, <span class="number">0</span>, n);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            cp += price[t][i];</span><br><span class="line">            cw += weight[t][i];</span><br><span class="line">            X[t] = i;</span><br><span class="line">            <span class="keyword">if</span> (cp &lt;= d &amp;&amp; cw &lt;= bestw) &#123;</span><br><span class="line">                machine(t + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            cp -= price[t][i];</span><br><span class="line">            cw -= weight[t][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br>
<img src="/2022/05/15/%E5%9B%9E%E6%BA%AF%E6%B3%95%E8%A7%A3%E5%86%B3%E6%9C%80%E5%B0%8F%E9%87%8D%E9%87%8F%E6%9C%BA%E5%99%A8%E8%AE%BE%E8%AE%A1%E9%97%AE%E9%A2%98/image-20220515141110582.png" alt="image-20220515141110582">
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>回溯法</tag>
      </tags>
  </entry>
  <entry>
    <title>接口隔离原则ISP</title>
    <url>/2022/06/23/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99ISP/</url>
    <content><![CDATA[<p>本文是阅读架构整洁之道2018 (（美）Robert C. Martin（罗伯特 C. 马丁）) (<a class="link" href="http://z-lib.org">z-lib.org<i class="fas fa-external-link-alt"></i></a>) 之后的整理。（侵删）</p>
<p><a class="link" href="https://en.wikipedia.org/wiki/SOLID">SOLID - Wikipedia<i class="fas fa-external-link-alt"></i></a></p>
<h2 id="四、接口隔离原则ISP">四、接口隔离原则ISP</h2>
<img src="/2022/06/23/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99ISP/image-20220623152044370.png" alt="image-20220623152044370">
<p>在图10.1所描绘的应用中，有多个用户需要操作OPS类。现在，我 们假设这里的User1只需要使用op1,User2只需要使用op2,User3只需要 使用op3。 在这种情况下，如果OPS类是用Java编程语言编写的，那么很明 显，User1虽然不需要调用op2、op3，但在源代码层次上也与它们形成 依赖关系。这种依赖意味着我们对OPS代码中op2所做的任何修改，即 使不会影响到User1的功能，也会导致它需要被重新编译和部署。 这个问题可以通过将不同的操作隔离成接口来解决，具体如图 10.2所示。 同样，我们也假设这个例子是用Java这种静态类型语言来实现 的，那么现在User1的源代码会依赖于U1Ops和op1，但不会依赖于 OPS。这样一来，我们之后对OPS做的修改只要不影响到User1的功能， 就不需要重新编译和部署User1了。</p>
]]></content>
      <categories>
        <category>软件开发设计原则</category>
      </categories>
      <tags>
        <tag>设计</tag>
      </tags>
  </entry>
  <entry>
    <title>神经网络的数学基础</title>
    <url>/2022/07/05/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="第2章-神经网络的数学基础">第2章 神经网络的数学基础</h2>
<h2 id="Basic">Basic</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>损失函数（loss function）</strong>：网络如何衡量在训练数据上的性能，即网络如何朝着正确的 方向前进。</p>
</li>
<li class="lvl-2">
<p><strong>优化器（optimizer）</strong>：基于训练数据和损失函数来更新网络的机制。</p>
</li>
<li class="lvl-2">
<p><strong>在训练和测试过程中需要监控的指标（metric）</strong>：本例只关心精度，即正确分类的图像所 占的比例。</p>
</li>
<li class="lvl-2">
<p><strong>张量（tensor）</strong>：是一个数据容器，是矩阵向任意维度的推广［注意， 张量的维度（dimension）通常叫作轴（axis）］。</p>
</li>
</ul>
<h2 id="数据表示">数据表示</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>标量（scalar）</strong>：仅包含一个数字的张量</p>
</li>
<li class="lvl-2">
<p><strong>1D张量（向量）</strong>：</p>
</li>
</ul>
 <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = np.array([<span class="number">12</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">14</span>, <span class="number">7</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">array([<span class="number">12</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">14</span>, <span class="number">7</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.ndim</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>这个向量有 5 个元素，所以被称为 <mark>5D 向量</mark>。不要把 5D 向量和 5D 张量弄混！ 5D 向量只有一个轴，沿着轴有 5 个维度，而 5D 张量有 5 个轴（沿着每个轴可能有任意个维度）。维度（dimensionality）可以表示沿着某个轴上的元素个数（比如 5D 向量），也可以表示张量中轴的个数（比如 5D 张量），这有时会令人感到混乱。对于后一种情况，技术上更准确的说法是 5 阶张量（张量的阶数即轴的个数），但 5D 张量这种模糊的写法更常见。</p>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>矩阵（matrix）</strong>：向量组成的数组</p>
</li>
</ul>
<h2 id="关键属性">关键属性</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>轴的个数（阶ndim）</strong>：3D 张量有 3 个轴，矩阵有 2 个轴。</p>
</li>
<li class="lvl-2">
<p><strong>形状（shape）</strong>：这是一个整数元组，表示张量沿每个轴的维度大小（元素个数）。</p>
</li>
<li class="lvl-2">
<p><strong>数据类型（dtype）</strong>：这是张量中所包含数据的类型，例如，张 量的类型可以是 float32、uint8、float64 等。</p>
</li>
</ul>
<h2 id="操作张量">操作张量</h2>
<p>张量切片，也就是[ ]是使用。</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>0</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>my_slice = train_images[<span class="number">10</span>:<span class="number">100</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(my_slice.shape)</span><br><span class="line">(<span class="number">90</span>, <span class="number">28</span>, <span class="number">28</span>)</span><br></pre></td></tr></table></figure>
<ul class="lvl-0">
<li class="lvl-2">
<p>1</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>my_slice = train_images[<span class="number">10</span>:<span class="number">100</span>, :, :] </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>my_slice.shape</span><br><span class="line">(<span class="number">90</span>, <span class="number">28</span>, <span class="number">28</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>my_slice = train_images[<span class="number">10</span>:<span class="number">100</span>, <span class="number">0</span>:<span class="number">28</span>, <span class="number">0</span>:<span class="number">28</span>] </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>my_slice.shape</span><br><span class="line">(<span class="number">90</span>, <span class="number">28</span>, <span class="number">28</span>)</span><br></pre></td></tr></table></figure>
<ul class="lvl-0">
<li class="lvl-2">
<p>2</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_slice = train_images[:, <span class="number">14</span>:, <span class="number">14</span>:]</span><br><span class="line"></span><br><span class="line">my_slice = train_images[:, <span class="number">7</span>:-<span class="number">7</span>, <span class="number">7</span>:-<span class="number">7</span>]</span><br><span class="line"><span class="comment"># 负数索引表示与当前轴终点的相对位置</span></span><br></pre></td></tr></table></figure>
<h2 id="数据批量">数据批量</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>批量轴（batch axis）或批量维度（batch dimension）</strong>：对于这种批量张量，第一个轴（0 轴）</p>
</li>
</ul>
<h2 id="现实世界中的数据张量">现实世界中的数据张量</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>向量数据</strong>：2D 张量，形状为 (samples, features)。</p>
</li>
<li class="lvl-2">
<p><strong>时间序列数据或序列数据</strong>：3D 张量，形状为 (samples, timesteps, features)。</p>
</li>
<li class="lvl-2">
<p><strong>图像</strong>：4D 张量，形状为 (samples, height, width, channels) 或 (samples, channels,  height, width)。</p>
</li>
<li class="lvl-2">
<p><strong>视频</strong>：5D 张量，形状为 (samples, frames, height, width, channels) 或 (samples,  frames, channels, height, width)。</p>
</li>
</ul>
<h2 id="举例-3">举例</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>向量数据</strong> 这是最常见的数据。对于这种数据集，每个数据点都被编码为一个向量，因此一个数据批 量就被编码为 2D 张量（即向量组成的数组），其中第一个轴是样本轴，第二个轴是特征轴。 我们来看两个例子。</p>
<ul class="lvl-2">
<li class="lvl-5"> 人口统计数据集，其中包括每个人的年龄、邮编和收入。每个人可以表示为包含 3 个值 的向量，而整个数据集包含 100 000 个人，因此可以存储在形状为 (100000, 3) 的 2D 张量中。</li>
<li class="lvl-5"> 文本文档数据集，我们将每个文档表示为每个单词在其中出现的次数（字典中包含 20 000 个常见单词）。每个文档可以被编码为包含 20 000 个值的向量（每个值对应于 字典中每个单词的出现次数），整个数据集包含 500 个文档，因此可以存储在形状为 (500, 20000) 的张量中。</li>
</ul>
</li>
<li class="lvl-2">
<p><strong>时间序列数据</strong></p>
</li>
</ul>
<img src="/2022/07/05/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/image-20220705210356685.png" alt="image-20220705210356685" style="zoom:80%;">
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>图像数据</strong>：图像通常具有三个维度：高度、宽度和颜色深度。</p>
</li>
</ul>
<p>如果图像大小为 256×256，那么 128 张灰度图像组成的批 量可以保存在一个形状为 (128, 256, 256, 1) 的张量中，而 128 张彩色图像组成的批量则可以保存在一个形状为 (128, 256, 256, 3) 的张量中</p>
<p><img src="/2022/07/05/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/image-20220705211045031.png" alt="image-20220705211045031"></p>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>视频数据</strong></p>
<p>视频数据是现实生活中需要用到 5D 张量的少数数据类型之一。视频可以看作一系列帧， 每一帧都是一张彩色图像。由于每一帧都可以保存在一个形状为 (height, width, color_ depth) 的 3D 张量中，因此一系列帧可以保存在一个形状为 (frames, height, width,  color_depth) 的 4D 张量中，而不同视频组成的批量则可以保存在一个 5D 张量中，其形状为 (samples, frames, height, width, color_depth)。 举个例子，一个以每秒 4 帧采样的 60 秒 YouTube 视频片段，视频尺寸为 144×256，这个 视频共有 240 帧。4 个这样的视频片段组成的批量将保存在形状为 (4, 240, 144, 256, 3) 的张量中。总共有 106 168 320 个值！如果张量的数据类型（dtype）是 float32，每个值都是 32 位，那么这个张量共有 405MB。好大！你在现实生活中遇到的视频要小得多，因为它们不以 float32 格式存储，而且通常被大大压缩，比如 MPEG 格式。</p>
</li>
</ul>
<h2 id="张量运算">张量运算</h2>
<p>所有计算机程序最终都可以简化为二进制输入上的一些二进制运算（AND、OR、NOR 等）， 与此类似，深度神经网络学到的所有变换也都可以简化为数值数据张量上的一些张量运算（tensor operation），例如加上张量、乘以张量等。</p>
<p>​	output = relu(dot(W, input) + b)</p>
<p>我们将上式拆开来看。这里有三个张量运算：输入张量和张量 W 之间的点积运算（dot）、 得到的 2D 张量与向量 b 之间的加法运算（+）、最后的 relu 运算。relu(x) 是 max(x, 0)。</p>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>逐元素运算</strong></p>
<p>relu 运算和加法都是逐元素（element-wise）的运算，即该运算独立地应用于张量中的每 个元素，也就是说，这些运算非常适合大规模并行实现（向量化实现，这一术语来自于 1970— 1990 年间向量处理器超级计算机架构）。</p>
<img src="/2022/07/05/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/image-20220705212630107.png" alt="image-20220705212630107" style="zoom:80%;">
</li>
<li class="lvl-2">
<p><strong>广播</strong></p>
<p>如果没有歧义的话，较小的张量会被广播（broadcast），以匹配较大张量的形状。广播包含 以下两步。</p>
<p>(1) 向较小的张量添加轴（叫作广播轴），使其 ndim 与较大的张量相同。</p>
<p>(2) 将较小的张量沿着新轴重复，使其形状与较大的张量相同。</p>
<p>来看一个具体的例子。假设 X 的形状是 (32, 10)，y 的形状是 (10,)。首先，我们给 y 添加空的第一个轴，这样 y 的形状变为 (1, 10)。然后，我们将 y 沿着新轴重复 32 次，这样 得到的张量 Y 的形状为 (32, 10)，并且 Y[i, :] == y for i in range(0, 32)。现在， 我们可以将 X 和 Y 相加，因为它们的形状相同。</p>
<p>下面这个例子利用广播将逐元素的 maximum 运算应用于两个形状不同的张量。</p>
<img src="/2022/07/05/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/image-20220705212958588.png" alt="image-20220705212958588" style="zoom:80%;">
</li>
<li class="lvl-2">
<p><strong>张量点积</strong></p>
</li>
<li class="lvl-2">
<p><strong>张量变形</strong></p>
<img src="/2022/07/05/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/image-20220705213151366.png" alt="image-20220705213151366" style="zoom:80%;">
</li>
</ul>
<h2 id="张量点积">张量点积</h2>
<p>在 Numpy、Keras、Theano 和 TensorFlow 中，都是用 * 实现逐元素乘积。TensorFlow 中的 点积使用了不同的语法，但在 Numpy 和 Keras 中，都是用标准的 dot 运算符来实现点积。</p>
<h2 id="张量变形">张量变形</h2>
<p>张量变形是指改变张量的行和列，以得到想要的形状。变形后的张量的元素总个数与初始 张量相同。简单的例子可以帮助我们理解张量变形。</p>
<p><img src="/2022/07/05/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/image-20220706095919161.png" alt="image-20220706095919161"></p>
<p>经常遇到的一种特殊的张量变形是转置（transposition）。对矩阵做转置是指将行和列互换， 使 x[i, :] 变为 x[:, i]。</p>
<img src="/2022/07/05/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/image-20220706095950194.png" alt="image-20220706095950194" style="zoom:80%;">
<h2 id="张量运算的几何解释">张量运算的几何解释</h2>
<h2 id="深度学习的几何解释">深度学习的几何解释</h2>
<h2 id="基于梯度的优化">基于梯度的优化</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p>权重（weight）或 可训练参数（trainable parameter）</p>
</li>
<li class="lvl-2">
<p>随机初始化（random initialization）</p>
</li>
<li class="lvl-2">
<p>训练循环（training loop）</p>
</li>
<li class="lvl-2">
<p>作前向传播（forward pass）</p>
</li>
<li class="lvl-2">
<p>可微（differentiable）</p>
</li>
<li class="lvl-2">
<p>梯度（gradient）</p>
</li>
<li class="lvl-2">
<p>小批量随机梯度下降（mini-batch stochastic gradient descent， 又称为小批量 SGD）</p>
</li>
<li class="lvl-2">
<p>反向传播（backward pass）</p>
</li>
<li class="lvl-2">
<p>优化方法（optimization method）或优化器（optimizer）</p>
</li>
<li class="lvl-2">
<p>根据微积分的知识，这种函数链可以利用下面这个恒等式进行求导，它称为链式法则（chain  rule）：(f(g(x)))’ = f’(g(x)) * g’(x)。将链式法则应用于神经网络梯度值的计算，得 到的算法叫作反向传播（backpropagation，有时也叫反式微分，reverse-mode differentiation）。局部极小点（local minimum）</p>
</li>
</ul>
]]></content>
      <categories>
        <category>deep learning</category>
      </categories>
      <tags>
        <tag>神经网络</tag>
      </tags>
  </entry>
  <entry>
    <title>谈谈jsp</title>
    <url>/2022/06/27/%E8%B0%88%E8%B0%88jsp/</url>
    <content><![CDATA[<h4 id="什么是jsp">什么是jsp</h4>
<p>jsp 是 Java Server Pages.   <strong>JSP = HTML + Java片段</strong></p>
<h4 id="为什么要用jsp？">为什么要用jsp？</h4>
<p>下面是一段返回简单页面的servlet</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(name = &quot;PageServlet&quot;, urlPatterns = &#123;&quot;/page&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">ServletOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">        out.write(<span class="string">&quot;&lt;h1&gt;hello jsp&lt;/h1&gt;&quot;</span>.getBytes());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>早期开发网站就是这样做的，把前端代码一行一行的写在out.write（）中。</p>
<p>我们想要去返回一些复杂的页面，还向上面写就会复杂了，极大的扩大了代码量。如果我们能只写页面，让servlet自动去帮我们生成servlet就好了，所以下面就有了这个东西。</p>
<img src="/2022/06/27/%E8%B0%88%E8%B0%88jsp/image-20220627160912677.png" alt="image-20220627160912677">
<p>这是jsp代码，也就是把html和java代码集合在一起。</p>
<p>编译之后会有下面这样的代码：</p>
<p>HttpJspPage extends JspPage extends Servlet</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Generated by the Jasper component of Apache Tomcat</span></span><br><span class="line"><span class="comment"> * Version: Apache Tomcat/9.0.45</span></span><br><span class="line"><span class="comment"> * Generated at: 2022-06-27 03:47:47 UTC</span></span><br><span class="line"><span class="comment"> * Note: The last modified time of this file was set to</span></span><br><span class="line"><span class="comment"> *       the last modified time of the source file after</span></span><br><span class="line"><span class="comment"> *       generation to assist with modification tracking.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> org.apache.jsp.view;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.*;</span><br><span class="line"><span class="keyword">import</span> com.entity.Joiner;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Stream;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">LeaderBoard_jsp</span> <span class="keyword">extends</span> <span class="title class_">org</span>.apache.jasper.runtime.HttpJspBase</span><br><span class="line">    <span class="keyword">implements</span> <span class="title class_">org</span>.apache.jasper.runtime.JspSourceDependent,</span><br><span class="line">                 org.apache.jasper.runtime.JspSourceImports &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> javax.servlet.jsp.<span class="type">JspFactory</span> <span class="variable">_jspxFactory</span> <span class="operator">=</span></span><br><span class="line">          javax.servlet.jsp.JspFactory.getDefaultFactory();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> java.util.Map&lt;java.lang.String,java.lang.Long&gt; _jspx_dependants;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> java.util.Set&lt;java.lang.String&gt; _jspx_imports_packages;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> java.util.Set&lt;java.lang.String&gt; _jspx_imports_classes;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    _jspx_imports_packages = <span class="keyword">new</span> <span class="title class_">java</span>.util.HashSet&lt;&gt;();</span><br><span class="line">    _jspx_imports_packages.add(<span class="string">&quot;javax.servlet&quot;</span>);</span><br><span class="line">    _jspx_imports_packages.add(<span class="string">&quot;javax.servlet.http&quot;</span>);</span><br><span class="line">    _jspx_imports_packages.add(<span class="string">&quot;javax.servlet.jsp&quot;</span>);</span><br><span class="line">    _jspx_imports_classes = <span class="keyword">new</span> <span class="title class_">java</span>.util.HashSet&lt;&gt;();</span><br><span class="line">    _jspx_imports_classes.add(<span class="string">&quot;java.util.List&quot;</span>);</span><br><span class="line">    _jspx_imports_classes.add(<span class="string">&quot;java.util.stream.Stream&quot;</span>);</span><br><span class="line">    _jspx_imports_classes.add(<span class="string">&quot;com.entity.Joiner&quot;</span>);</span><br><span class="line">    _jspx_imports_classes.add(<span class="string">&quot;java.util.concurrent.atomic.AtomicInteger&quot;</span>);</span><br><span class="line">    _jspx_imports_classes.add(<span class="string">&quot;java.util.Collection&quot;</span>);</span><br><span class="line">    _jspx_imports_classes.add(<span class="string">&quot;java.io.IOException&quot;</span>);</span><br><span class="line">    _jspx_imports_classes.add(<span class="string">&quot;java.util.Comparator&quot;</span>);</span><br><span class="line">    _jspx_imports_classes.add(<span class="string">&quot;java.util.Collections&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">volatile</span> javax.el.ExpressionFactory _el_expressionfactory;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">volatile</span> org.apache.tomcat.InstanceManager _jsp_instancemanager;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> java.util.Map&lt;java.lang.String,java.lang.Long&gt; getDependants() &#123;</span><br><span class="line">    <span class="keyword">return</span> _jspx_dependants;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> java.util.Set&lt;java.lang.String&gt; getPackageImports() &#123;</span><br><span class="line">    <span class="keyword">return</span> _jspx_imports_packages;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> java.util.Set&lt;java.lang.String&gt; getClassImports() &#123;</span><br><span class="line">    <span class="keyword">return</span> _jspx_imports_classes;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> javax.el.ExpressionFactory <span class="title function_">_jsp_getExpressionFactory</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (_el_expressionfactory == <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="keyword">synchronized</span> (<span class="built_in">this</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (_el_expressionfactory == <span class="literal">null</span>) &#123;</span><br><span class="line">          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _el_expressionfactory;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> org.apache.tomcat.InstanceManager <span class="title function_">_jsp_getInstanceManager</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (_jsp_instancemanager == <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="keyword">synchronized</span> (<span class="built_in">this</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (_jsp_instancemanager == <span class="literal">null</span>) &#123;</span><br><span class="line">          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _jsp_instancemanager;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_jspInit</span><span class="params">()</span> &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_jspDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_jspService</span><span class="params">(<span class="keyword">final</span> javax.servlet.http.HttpServletRequest request, <span class="keyword">final</span> javax.servlet.http.HttpServletResponse response)</span></span><br><span class="line">      <span class="keyword">throws</span> java.io.IOException, javax.servlet.ServletException &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) &#123;</span><br><span class="line">      <span class="keyword">final</span> java.lang.<span class="type">String</span> <span class="variable">_jspx_method</span> <span class="operator">=</span> request.getMethod();</span><br><span class="line">      <span class="keyword">if</span> (<span class="string">&quot;OPTIONS&quot;</span>.equals(_jspx_method)) &#123;</span><br><span class="line">        response.setHeader(<span class="string">&quot;Allow&quot;</span>,<span class="string">&quot;GET, HEAD, POST, OPTIONS&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="string">&quot;GET&quot;</span>.equals(_jspx_method) &amp;&amp; !<span class="string">&quot;POST&quot;</span>.equals(_jspx_method) &amp;&amp; !<span class="string">&quot;HEAD&quot;</span>.equals(_jspx_method)) &#123;</span><br><span class="line">        response.setHeader(<span class="string">&quot;Allow&quot;</span>,<span class="string">&quot;GET, HEAD, POST, OPTIONS&quot;</span>);</span><br><span class="line">        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, <span class="string">&quot;JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> javax.servlet.jsp.PageContext pageContext;</span><br><span class="line">    javax.servlet.http.<span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">final</span> javax.servlet.ServletContext application;</span><br><span class="line">    <span class="keyword">final</span> javax.servlet.ServletConfig config;</span><br><span class="line">    javax.servlet.jsp.<span class="type">JspWriter</span> <span class="variable">out</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">final</span> java.lang.<span class="type">Object</span> <span class="variable">page</span> <span class="operator">=</span> <span class="built_in">this</span>;</span><br><span class="line">    javax.servlet.jsp.<span class="type">JspWriter</span> <span class="variable">_jspx_out</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    javax.servlet.jsp.<span class="type">PageContext</span> <span class="variable">_jspx_page_context</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      response.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">      pageContext = _jspxFactory.getPageContext(<span class="built_in">this</span>, request, response,</span><br><span class="line">      			<span class="literal">null</span>, <span class="literal">true</span>, <span class="number">8192</span>, <span class="literal">true</span>);</span><br><span class="line">      _jspx_page_context = pageContext;</span><br><span class="line">      application = pageContext.getServletContext();</span><br><span class="line">      config = pageContext.getServletConfig();</span><br><span class="line">      session = pageContext.getSession();</span><br><span class="line">      out = pageContext.getOut();</span><br><span class="line">      _jspx_out = out;</span><br><span class="line"></span><br><span class="line">      out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;html&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;head&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;    &lt;title&gt;LeaderBoard&lt;/title&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;    &lt;style&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        .div &#123;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;            background-color: darkcyan;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;            width: 500px;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;            min-height: 1000px;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;            padding-bottom: 200px;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &#125;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        table tr &#123;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;            height: 50px;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;            text-align: center;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &#125;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        .search &#123;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;            width: 400px;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &#125;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;    &lt;/style&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;/head&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;body&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;center&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;    &lt;div class=\&quot;div\&quot;&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;br&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;br&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;br&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;h2&gt;排行榜&lt;/h2&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;form method=\&quot;get\&quot; action=\&quot;/myWeb/search.board\&quot;&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;            &lt;input type=\&quot;search\&quot; name=\&quot;search\&quot; placeholder=\&quot;输入名字,专业,或者id,进行精准搜索\&quot; class=\&quot;search\&quot;/&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;            &lt;input type=\&quot;submit\&quot; value=\&quot;GO\&quot;/&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;/form&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;table border=\&quot;2\&quot;&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;            &lt;tr&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;                &lt;th&gt;rank&lt;/th&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;                &lt;th&gt;name&lt;/th&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;                &lt;th&gt;Profession&lt;/th&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;                &lt;th&gt;Id&lt;/th&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;                &lt;th&gt;Time&lt;/th&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;            &lt;/tr&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;            &quot;</span>);</span><br><span class="line"></span><br><span class="line">                List&lt;Joiner&gt; users = (List&lt;Joiner&gt;) request.getAttribute(<span class="string">&quot;users&quot;</span>);</span><br><span class="line">                <span class="type">AtomicInteger</span> <span class="variable">rank</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicInteger</span>(<span class="number">1</span>);</span><br><span class="line">                users.sort(Comparator.comparing(Joiner::getSumTime)</span><br><span class="line">                        .thenComparing(x -&gt; -x.getSumTime())</span><br><span class="line">                        .thenComparing(x -&gt; -x.getName().charAt(<span class="number">0</span>)));</span><br><span class="line">                Collections.reverse(users);</span><br><span class="line">                <span class="keyword">for</span> (Joiner x : users) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        out.println(<span class="string">&quot;&lt;tr&gt;&quot;</span>);</span><br><span class="line">                        out.println(<span class="string">&quot;&lt;td&gt;&quot;</span> + rank + <span class="string">&quot;&lt;/td&gt;&quot;</span>);</span><br><span class="line">                        out.println(<span class="string">&quot;&lt;td&gt;&quot;</span> + x.getName() + <span class="string">&quot;&lt;/td&gt;&quot;</span>);</span><br><span class="line">                        out.println(<span class="string">&quot;&lt;td&gt;&quot;</span> + x.getProfession() + <span class="string">&quot;&lt;/td&gt;&quot;</span>);</span><br><span class="line">                        out.println(<span class="string">&quot;&lt;td&gt;&quot;</span> + x.getStudentId() + <span class="string">&quot;&lt;/td&gt;&quot;</span>);</span><br><span class="line">                        out.println(<span class="string">&quot;&lt;td&gt;&quot;</span> + x.getSumTime() + <span class="string">&quot;&lt;/td&gt;&quot;</span>);</span><br><span class="line">                        rank.getAndIncrement();</span><br><span class="line">                        out.println(<span class="string">&quot;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            </span><br><span class="line">      out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;/table&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;a href=\&quot;/myWeb/profession.board\&quot;&gt;专业榜&lt;/a&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;        &lt;a href=\&quot;/myWeb/view/Hall.jsp\&quot;&gt;后退&lt;/a&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;    &lt;/div&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;/center&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;/body&gt;\r\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;/html&gt;\r\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (java.lang.Throwable t) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!(t <span class="keyword">instanceof</span> javax.servlet.jsp.SkipPageException))&#123;</span><br><span class="line">        out = _jspx_out;</span><br><span class="line">        <span class="keyword">if</span> (out != <span class="literal">null</span> &amp;&amp; out.getBufferSize() != <span class="number">0</span>)</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (response.isCommitted()) &#123;</span><br><span class="line">              out.flush();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              out.clearBuffer();</span><br><span class="line">            &#125;</span><br><span class="line">          &#125; <span class="keyword">catch</span> (java.io.IOException e) &#123;&#125;</span><br><span class="line">        <span class="keyword">if</span> (_jspx_page_context != <span class="literal">null</span>) _jspx_page_context.handlePageException(t);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServletException</span>(t);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      _jspxFactory.releasePageContext(_jspx_page_context);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>也就是把我们动态的数据展示在页面上。</p>
<h4 id="jsp常用的写法，语法">jsp常用的写法，语法</h4>
<ul class="lvl-0">
<li class="lvl-2">
<p>&lt;% %&gt;中间写java代码</p>
</li>
<li class="lvl-2">
<p>&lt;%= 表达式 %&gt;</p>
   <figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;tr&gt;</span><br><span class="line">    &lt;td&gt;</span><br><span class="line">        &lt;%</span><br><span class="line">            <span class="type">Date</span> <span class="variable">d</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">            <span class="type">SimpleDateFormat</span> <span class="variable">df</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">now</span> <span class="operator">=</span> df.format(d);</span><br><span class="line">        %&gt;</span><br><span class="line">        当前时间:</span><br><span class="line">        &lt;%=now%&gt;</span><br><span class="line">    &lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">                  <span class="type">Date</span> <span class="variable">d</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">                  <span class="type">SimpleDateFormat</span> <span class="variable">df</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">                  <span class="type">String</span> <span class="variable">now</span> <span class="operator">=</span> df.format(d);</span><br><span class="line">              </span><br><span class="line">out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;                    当前时间:\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;                    &quot;</span>);</span><br><span class="line">out.print(now);</span><br></pre></td></tr></table></figure>
<ul class="lvl-0">
<li class="lvl-2">
<p>控制语法</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> request.getServletContext();</span><br><span class="line">    <span class="type">String</span> <span class="variable">studentId</span> <span class="operator">=</span> (String) request.getAttribute(<span class="string">&quot;studentId&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">signTime</span> <span class="operator">=</span> (String) servletContext.getAttribute(studentId + <span class="string">&quot;-now&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (signTime != <span class="literal">null</span>) &#123;</span><br><span class="line">        out.print(<span class="string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;签到时间&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%=signTime%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-2">
<p>循环语法</p>
</li>
</ul>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    ArrayList&lt;Board&gt; professionBoard = (ArrayList&lt;Board&gt;) request.getAttribute(<span class="string">&quot;ProfessionBoard&quot;</span>);</span><br><span class="line">    professionBoard.sort(Comparator.comparing(Board::getSumTime).thenComparing(Board::getProfession));</span><br><span class="line">    Collections.reverse(professionBoard);</span><br><span class="line">    <span class="type">int</span> <span class="variable">rank</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (Board b : professionBoard) &#123;</span><br><span class="line">        out.print(<span class="string">&quot;&lt;tr&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;td&gt;&quot;</span> + rank + <span class="string">&quot;&lt;/td&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;td&gt;&quot;</span> + b.getProfession() + <span class="string">&quot;&lt;/td&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;td&gt;&quot;</span> + b.getSumTime() + <span class="string">&quot;&lt;/td&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">        rank++;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>
<img src="/2022/06/27/%E8%B0%88%E8%B0%88jsp/image-20220627164919505.png" alt="image-20220627164919505" style="zoom:33%;">
<h4 id="jsp缺陷">jsp缺陷</h4>
<p>1、JSP底层原理就是Servlet直接out.print的方式运行，在第一次访问JSP时，需要将JSP编译成Servlet的class文件，拖慢运行速度。</p>
<p>2、JSP可以直接嵌入java脚本，实现页面动态化，但是这样就打破了分层的思想，影响整体程序结构，降低JSP页面的可读性。</p>
<p>3、全局刷新，一处报错全都不能显示。这也很好理解，java代码没跑通，servlet又怎么会显示呢。引入ajax。</p>
<p>。。。。。。。</p>
<img src="/2022/06/27/%E8%B0%88%E8%B0%88jsp/image-20220627162821738.png" alt="image-20220627162821738">
<img src="/2022/06/27/%E8%B0%88%E8%B0%88jsp/image-20220627162839269.png" alt="image-20220627162839269" style="zoom:80%;">
<p>后续出现了很多优秀的模板技术（velocity、freemarker、thymeleaf等），这些模板技术效率都高于jsp，对于企业和开发者来说，选择变多了。</p>
<p><a class="link" href="https://www.cnblogs.com/ywb-articles/p/10627398.html">模板引擎总结(Thymeleaf，FreeMarker，Enjoy，Velocity，JSP等) - 认真的杨先森 - 博客园 (cnblogs.com)<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>servlet</tag>
      </tags>
  </entry>
  <entry>
    <title>ch02_ 跨交换机实现VLAN间路由</title>
    <url>/2022/05/27/%E8%B7%A8%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%AE%9E%E7%8E%B0%20VLAN%E9%97%B4%E8%B7%AF%E7%94%B1/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th><strong>实验目的</strong></th>
<th>利用三层交换机跨交换机实现 VLAN 间路由</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>实验设备</strong></td>
<td>三层交换机 1 台 二层交换机 2 台 PC 机 4 台</td>
</tr>
<tr>
<td><strong>实验基本要求</strong></td>
<td>成功ping通,成功实现跨vlan间路由</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>一、原理：在二层交换机上划分 VLAN 可实现不同 VLAN 的主机接入，而 VLAN 间的主机通信为不 同网段间的通信，需要通过三层设备对数据进行路由转发才可以实现，通过在三层交换机上为 各 VLAN 配置 SVI 接口，利用三层交换机的路由功能可以实现 VLAN 间的路由。</p>
<p>一、   过程</p>
<p>1、    按照文档搭建拓扑。</p>
<img src="/2022/05/27/%E8%B7%A8%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%AE%9E%E7%8E%B0%20VLAN%E9%97%B4%E8%B7%AF%E7%94%B1/123.png" alt="123">
<p>2、    配置交换机</p>
<p>两台<strong>二层交换机</strong>配置类似，我在此举其中一个栗子。</p>
<p>\1.  // 进入配置模式</p>
<p>\2.  Switch&gt;enable</p>
<p>\3.  Switch#config terminal</p>
<p>\4.  // 配置vlan,‘vlan 10’如果不存在此vlan会创建</p>
<p>\5.  Switch(config)#vlan 10</p>
<p>\6.  Switch(config-vlan)#name VLAN10</p>
<p>\7.  Switch(config-vlan)#exit</p>
<p>\8.  // 把1-10这6个端口划分给vlan10</p>
<p>\9.  Switch(config)#interface range fastEthernet 0/1-10</p>
<p>\10. Switch(config-if-range)#switchport mode access</p>
<p>\11. Switch(config-if-range)#switchport access vlan 10</p>
<p>\12. Switch(config-if-range)#exit</p>
<p>\13. // 同理把11-20划分给vlan20</p>
<p>​     配置23-24为trunk口</p>
<p>\1. Switch(config)#interface range fastEthernet 0/23-24</p>
<p>\2. Switch(config-if-range)#switchport mode access</p>
<p>\3. Switch(config-if-range)#switchport mode trunk</p>
<p>\4. Switch(config-if-range)#exit</p>
<p>检查配置情况</p>
<p>\1. Switch#show vlan</p>
<p>\2.</p>
<p>\3. VLAN   Name    Status  Ports</p>
<p>\4. --------------------------------------------------------------</p>
<p>\5.   1  default   active  Fa0/21, Fa0/22, Fa0/23</p>
<p>\6.                Gig0/1 , Gig0/2</p>
<p>\7.  10  VLAN10   active  Fa0/1, Fa0/2, Fa0/3</p>
<p>\8.                Fa0/4 ,Fa0/5, Fa0/6</p>
<p>\9.                  Fa0/7, Fa0/8, Fa0/9, Fa0/10</p>
<p>\10.  20  VLAN20   active  Fa0/11, Fa0/12, Fa0/13, Fa0/14</p>
<p>\11.                Fa0/15, Fa0/16, Fa0/17, Fa0/18</p>
<p>\12.                  Fa0/19, Fa0/20</p>
<p>​    <strong>配置三层交换机</strong></p>
<p>建立vlan10和vlan20,并分别给他们ip 192.168.10.1 和192.168.20.1</p>
<p>开启ip路由功能。指令是ip routing。</p>
<p>3、    配置PC</p>
<p>修改IP（以其中一台pc为例）</p>
<img src="/2022/05/27/%E8%B7%A8%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%AE%9E%E7%8E%B0%20VLAN%E9%97%B4%E8%B7%AF%E7%94%B1/456.png" alt="456">
<p>4、    ping测试</p>
<p>一下所有的ping均是从一台IP为192.168.10.2发起的</p>
<p>都在左边交换机下的两台pc 拼,192.168.10.2ping192.168.20.2</p>
<img src="/2022/05/27/%E8%B7%A8%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%AE%9E%E7%8E%B0%20VLAN%E9%97%B4%E8%B7%AF%E7%94%B1/789.png" alt="789">
<p>左边的pc拼右边pc中同vlan,192.168.10.2ping192.168.10.3</p>
<img src="/2022/05/27/%E8%B7%A8%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%AE%9E%E7%8E%B0%20VLAN%E9%97%B4%E8%B7%AF%E7%94%B1/789-16536614016541.png" alt="789">
<p>左边的pc拼右边pc中不同vlan, 192.168.10.2ping192.168.20.3</p>
<img src="/2022/05/27/%E8%B7%A8%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%AE%9E%E7%8E%B0%20VLAN%E9%97%B4%E8%B7%AF%E7%94%B1/789-16536614301232.png" alt="789">
<p>5、    问题与反思</p>
<p>在实验过程中出现了配置没问题但是不能ping的问题，解决措施是重新连接设备，重启解决。</p>
<h4 id="实验结果或结论：">实验结果或结论：</h4>
<p>IP路由是网络层设备所特有的功能，这里三层交换机实现了这个功能，所以说是能够实现在不同的局域网下进行通信。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>交换机</tag>
        <tag>VLAN</tag>
        <tag>实验报告</tag>
      </tags>
  </entry>
  <entry>
    <title>ch01_ 跨交换机实现VLAN</title>
    <url>/2022/04/17/%E8%B7%A8%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%AE%9E%E7%8E%B0VLAN/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th><strong>实验目的</strong></th>
<th>掌握如何在交换机上划分基于端口的 VLAN、如何给 VLAN 内添加端口，理解跨交换机 之间 VLAN 的特点</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>实验设备</strong></td>
<td>三层交换机 1 台 二层交换机 1 台 PC 6 台</td>
</tr>
<tr>
<td><strong>实验基本要求</strong></td>
<td>交换机的基本配置方法，VLAN 的工作原理和配置方法，Trunk 的工作原理和配置方法</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>实验原理及过程</p>
<h3 id="一、原理：">一、原理：</h3>
<p>​	VLAN（Virtual Local Area Network，虚拟局域网）是指在一个物理网段内，进行逻辑的 划分，划分成若干个虚拟局域网。</p>
<h3 id="二、-过程">二、   过程</h3>
<h5 id="1、按照文档搭建拓扑。">1、按照文档搭建拓扑。</h5>
<img src="/2022/04/17/%E8%B7%A8%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%AE%9E%E7%8E%B0VLAN/1.jpg" alt="1">
<h5 id="2、配置交换机">2、配置交换机</h5>
<p>​	两台交换机配置类似，我在此举其中一个栗子。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 进入配置模式</span></span><br><span class="line">Switch&gt;enable  </span><br><span class="line">Switch<span class="meta">#config terminal  </span></span><br><span class="line"><span class="comment">// 配置vlan,‘vlan 10’如果不存在此vlan会创建</span></span><br><span class="line">Switch(config)<span class="meta">#vlan 10   </span></span><br><span class="line">Switch(config-vlan)<span class="meta">#name VLAN10  </span></span><br><span class="line">Switch(config-vlan)<span class="meta">#exit  </span></span><br><span class="line"><span class="comment">// 把1-6这6个端口划分给vlan10</span></span><br><span class="line">Switch(config)<span class="meta">#interface range fastEthernet 0/1-6  </span></span><br><span class="line">Switch(config-<span class="keyword">if</span>-range)<span class="meta">#switchport mode access  </span></span><br><span class="line">Switch(config-<span class="keyword">if</span>-range)<span class="meta">#switchport access vlan 10  </span></span><br><span class="line">Switch(config-<span class="keyword">if</span>-range)<span class="meta">#exit</span></span><br><span class="line"><span class="comment">// 配置19-24为trunk口</span></span><br><span class="line">Switch(config)<span class="meta">#interface range fastEthernet 0/19-24  </span></span><br><span class="line">Switch(config-<span class="keyword">if</span>-range)<span class="meta">#switchport mode access   </span></span><br><span class="line">Switch(config-<span class="keyword">if</span>-range)<span class="meta">#switchport mode trunk  </span></span><br><span class="line">Switch(config-<span class="keyword">if</span>-range)<span class="meta">#exit </span></span><br><span class="line"><span class="comment">// 检查配置情况</span></span><br><span class="line">Switch<span class="meta">#show vlan  	  </span></span><br><span class="line">VLAN     Name       Status    Ports  </span><br><span class="line">--------------------------------------------------------------  </span><br><span class="line">  <span class="number">1</span>    <span class="keyword">default</span>     active    Fa0/<span class="number">21</span>, Fa0/<span class="number">22</span>, Fa0/<span class="number">23</span>  </span><br><span class="line">                              Gig0/<span class="number">1</span> , Gig0/<span class="number">2</span>  </span><br><span class="line">  <span class="number">10</span>    VLAN10      active    Fa0/<span class="number">1</span>, Fa0/<span class="number">2</span>, Fa0/<span class="number">3</span>  </span><br><span class="line">                              Fa0/<span class="number">4</span> ,Fa0/<span class="number">5</span>, Fa0/<span class="number">6</span>  </span><br><span class="line">  <span class="number">20</span>    VLAN20      active    Fa0/<span class="number">7</span>, Fa0/<span class="number">8</span>, Fa0/<span class="number">9</span>, Fa0/<span class="number">10</span>  </span><br><span class="line">                              Fa0/<span class="number">11</span>, Fa0/<span class="number">12</span>, Fa0/<span class="number">19</span>, Fa0/<span class="number">20</span>  </span><br><span class="line">  <span class="number">30</span>    VLAN30      active    Fa0/<span class="number">13</span>, Fa0/<span class="number">14</span>, Fa0/<span class="number">15</span>  </span><br><span class="line">                              Fa0/<span class="number">16</span>, Fa0/<span class="number">17</span>, Fa0/<span class="number">18</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h5 id="3、配置PC">3、配置PC</h5>
<p>修改IP</p>
<img src="/2022/04/17/%E8%B7%A8%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%AE%9E%E7%8E%B0VLAN/1.png" alt="1">
<h5 id="5、-ping测试">5、 ping测试</h5>
<p>​		同VLAN10下ping,<mark>192.168.10.2</mark>ping<mark>192.168.10.3</mark></p>
<img src="/2022/04/17/%E8%B7%A8%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%AE%9E%E7%8E%B0VLAN/1.jpg.png" alt="1.jpg">
<p>不同VLAN下ping不通,<mark>192.168.10.2</mark>ping<mark>192.168.20.3</mark></p>
<img src="/2022/04/17/%E8%B7%A8%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%AE%9E%E7%8E%B0VLAN/1.jpg-16501605614501.png" alt="1.jpg">
<h3 id="实验结果或结论：-2">实验结果或结论：</h3>
<p>Vlan技术是一种易于实现，划分清楚，高效的局域网划分技术。通过vlan的划分，熟悉并学会到了交换机的基本配置，也知道了如何配置trunk以及trunk是什么。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>交换机</tag>
        <tag>VLAN</tag>
        <tag>实验报告</tag>
      </tags>
  </entry>
  <entry>
    <title>软件项目管理认识与实践总结</title>
    <url>/2022/05/27/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E8%AE%A4%E8%AF%86%E4%B8%8E%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="软件项目管理认识与实践总结">软件项目管理认识与实践总结</h2>
<p>衡先焘2020010661</p>
<p>​		通过本学期胡丽红老师的《CMM软件项目管理》课程的学习和自身经历的总结，我深深的体会到了项目管理在软件工程等领域的重要性。以前和小伙伴试着做过国创科研等等，好多次都是因为没有一个好的idea，不能对idea做出项目计划而以失败告终。未来，我就可以通过这学期的项目管理知识做出一个未来的好的规划。</p>
<ol>
<li class="lvl-3">
<p>何为项目管理？</p>
<p>软件项目管理是为了使软件项目能够按照预定的成本，进度、质量顺利完成，而对人员，产品，过程和项目进行分析和管理的活动。根本目的是为了让软件项目尤其是大型项目的整个软件生命周期（从分析，设计，编码到测试，维护全过程）都能在管理者的控制之下，以预定成本按期，按质完成软件交付用户使用。主要有以下四个阶段，项目初始，项目计划，项目执行阶段，项目收尾。</p>
</li>
<li class="lvl-3">
<p>如何使用先进的项目管理工具</p>
<p>一款先进的工具能带来巨大的便利。一个月的时间里，通过组内监督、经常实践、自我反省，我们顺利的完成了project的学习、teambition学习的实践任务。我认为想要快速学会一个项目管理工具，最快的措施就是在学的过程中跟着做一次项目管理。当你做完一遍完整的项目管理之后，是会很有成就感的，然后再上手别的项目时候，会有自信，带着这种自信去做项目，遇到问题再逐个解决，这无疑是最迅速的学习方法。我们对于project就是通过跟着一个网课的老师做一次项目，做完这些之后，有了使用的经验之后，我们再去使用teambition做进一步的学习。</p>
</li>
<li class="lvl-3">
<p>团队协作的收获与感想</p>
<p>通过和小组成员一起的协助，我理解到了很多，也学习了很多。1️⃣小组讨论要保持尊重的态度，对于意见不和的时候不要立刻站队，要去多思考分歧的点在哪儿。2️⃣团队监督对于学习很有帮助，当所有人都在为了一个目标努力时候，是不会有人再去想着摆烂，会去想着如何维护好我们的团队。3️⃣汇报工作全方面锻炼一个团队，一个人。一个良好的汇报需要整个组的努力，每个人都要去收集每次汇报的任务点，汇报人要做好ppt，写好稿子，再在组内进行演练，其他成员对此提出修正的意见，再修改。</p>
</li>
</ol>
<p>​</p>
<p>最后，我想说，对于软件管理要有一定的重视，因为它贯穿于项目生命周期的始终，并代表软件产品接受各项评审，对于软件开发有很重要的作用。对于本课程的学习，让我真真切切地了解到许多关于软件项目管理的知识，还可以对本学期android课程所开发的APP作进一步的完善，以后的学习生活中，也会努力地让软件项目管理有关理论得以应用。</p>
]]></content>
      <categories>
        <category>课程论文</category>
      </categories>
      <tags>
        <tag>项目管理</tag>
        <tag>课程总结</tag>
      </tags>
  </entry>
  <entry>
    <title>里氏替换原则LSP</title>
    <url>/2022/06/22/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99LSP/</url>
    <content><![CDATA[<p>本文是阅读架构整洁之道2018 (（美）Robert C. Martin（罗伯特 C. 马丁）) (<a class="link" href="http://z-lib.org">z-lib.org<i class="fas fa-external-link-alt"></i></a>) 之后的整理。（侵删）</p>
<p><a class="link" href="https://en.wikipedia.org/wiki/SOLID">SOLID - Wikipedia<i class="fas fa-external-link-alt"></i></a></p>
<h2 id="三、里氏替换原则LSP">三、里氏替换原则LSP</h2>
<h3 id="定义概念-3">定义概念</h3>
<p>1988年，Barbara Liskov在描述如何定义子类型时写下了这样一 段话： 这里需要的是一种可替换性：如果对于每个类型是S的对象o1都存 在一个类型为T的对象o2，能使操作T类型的程序P在用o2替换o1时行为 保持不变，我们就可以将S称为T的子类型。</p>
<h3 id="举例一">举例一</h3>
<p>假设我们有一个License类，其结构如图9.1所示。该类中有一个 名为calcFee（）的方法，该方法将由Billing应用程序来调用。而 License类有两个“子类型”:PersonalLicense与BusinessLicense， 这两个类会用不同的算法来计算授权费用。</p>
<img src="/2022/06/22/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99LSP/image-20220623151618648.png" alt="image-20220623151618648">
<p>上述设计是符合LSP原则的，因为Billing应用程序的行为并不依 赖于其使用的任何一个衍生类。也就是说，这两个衍生类的对象都是 可以用来替换License类对象的。</p>
<h3 id="举例二">举例二</h3>
<p>正方形/长方形问题是一个著名（或者说臭名远扬）的违反LSP的 设计案例（该问题的结构如图9.2所示）。</p>
<img src="/2022/06/22/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99LSP/image-20220623151711133.png" alt="image-20220623151711133">
<p>在这个案例中，Square类并不是Rectangle类的子类型，因为 Rectangle类的高和宽可以分别修改，而Square类的高和宽则必须一同 修改。由于User类始终认为自己在操作Rectangle类，因此会带来一些 混淆。例如在下面的代码中： Rectangle r = … r.setW（5）； r.setH（2）； assert（r.area（）== 10）； 很显然，如果上述代码在…处返回的是Square类，则最后的这个 assert是不会成立的。 如果想要防范这种违反LSP的行为，唯一的办法就是在User类中增 加用于区分Rectangle和Square的检测逻辑（例如增加if语句）。但这 样一来，User类的行为又将依赖于它所使用的类，这两个类就不能互 相替换了。</p>
]]></content>
      <categories>
        <category>软件开发设计原则</category>
      </categories>
      <tags>
        <tag>设计</tag>
      </tags>
  </entry>
</search>
